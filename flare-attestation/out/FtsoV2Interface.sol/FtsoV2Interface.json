{"abi":[{"type":"function","name":"getFeedById","inputs":[{"name":"_feedId","type":"bytes21","internalType":"bytes21"}],"outputs":[{"name":"_value","type":"uint256","internalType":"uint256"},{"name":"_decimals","type":"int8","internalType":"int8"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedByIdInWei","inputs":[{"name":"_feedId","type":"bytes21","internalType":"bytes21"}],"outputs":[{"name":"_value","type":"uint256","internalType":"uint256"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedByIndex","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_value","type":"uint256","internalType":"uint256"},{"name":"_decimals","type":"int8","internalType":"int8"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedByIndexInWei","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_value","type":"uint256","internalType":"uint256"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedId","inputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_feedId","type":"bytes21","internalType":"bytes21"}],"stateMutability":"view"},{"type":"function","name":"getFeedIndex","inputs":[{"name":"_feedId","type":"bytes21","internalType":"bytes21"}],"outputs":[{"name":"_index","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFeedsById","inputs":[{"name":"_feedIds","type":"bytes21[]","internalType":"bytes21[]"}],"outputs":[{"name":"_values","type":"uint256[]","internalType":"uint256[]"},{"name":"_decimals","type":"int8[]","internalType":"int8[]"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedsByIdInWei","inputs":[{"name":"_feedIds","type":"bytes21[]","internalType":"bytes21[]"}],"outputs":[{"name":"_values","type":"uint256[]","internalType":"uint256[]"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedsByIndex","inputs":[{"name":"_indices","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"_values","type":"uint256[]","internalType":"uint256[]"},{"name":"_decimals","type":"int8[]","internalType":"int8[]"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"getFeedsByIndexInWei","inputs":[{"name":"_indices","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"_values","type":"uint256[]","internalType":"uint256[]"},{"name":"_timestamp","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"verifyFeedData","inputs":[{"name":"_feedData","type":"tuple","internalType":"struct FtsoV2Interface.FeedDataWithProof","components":[{"name":"proof","type":"bytes32[]","internalType":"bytes32[]"},{"name":"body","type":"tuple","internalType":"struct FtsoV2Interface.FeedData","components":[{"name":"votingRoundId","type":"uint32","internalType":"uint32"},{"name":"id","type":"bytes21","internalType":"bytes21"},{"name":"value","type":"int32","internalType":"int32"},{"name":"turnoutBIPS","type":"uint16","internalType":"uint16"},{"name":"decimals","type":"int8","internalType":"int8"}]}]}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getFeedById(bytes21)":"93e9f806","getFeedByIdInWei(bytes21)":"59feadf6","getFeedByIndex(uint256)":"108861f3","getFeedByIndexInWei(uint256)":"2ee874e8","getFeedId(uint256)":"93102836","getFeedIndex(bytes21)":"0a9cabe7","getFeedsById(bytes21[])":"4c375745","getFeedsByIdInWei(bytes21[])":"e3f5ccf5","getFeedsByIndex(uint256[])":"14956f5b","getFeedsByIndexInWei(uint256[])":"7722802b","verifyFeedData((bytes32[],(uint32,bytes21,int32,uint16,int8)))":"ceb05472"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes21\",\"name\":\"_feedId\",\"type\":\"bytes21\"}],\"name\":\"getFeedById\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"_decimals\",\"type\":\"int8\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes21\",\"name\":\"_feedId\",\"type\":\"bytes21\"}],\"name\":\"getFeedByIdInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFeedByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"int8\",\"name\":\"_decimals\",\"type\":\"int8\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFeedByIndexInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getFeedId\",\"outputs\":[{\"internalType\":\"bytes21\",\"name\":\"_feedId\",\"type\":\"bytes21\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes21\",\"name\":\"_feedId\",\"type\":\"bytes21\"}],\"name\":\"getFeedIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes21[]\",\"name\":\"_feedIds\",\"type\":\"bytes21[]\"}],\"name\":\"getFeedsById\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"int8[]\",\"name\":\"_decimals\",\"type\":\"int8[]\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes21[]\",\"name\":\"_feedIds\",\"type\":\"bytes21[]\"}],\"name\":\"getFeedsByIdInWei\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"name\":\"getFeedsByIndex\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"int8[]\",\"name\":\"_decimals\",\"type\":\"int8[]\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indices\",\"type\":\"uint256[]\"}],\"name\":\"getFeedsByIndexInWei\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"},{\"internalType\":\"uint64\",\"name\":\"_timestamp\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"votingRoundId\",\"type\":\"uint32\"},{\"internalType\":\"bytes21\",\"name\":\"id\",\"type\":\"bytes21\"},{\"internalType\":\"int32\",\"name\":\"value\",\"type\":\"int32\"},{\"internalType\":\"uint16\",\"name\":\"turnoutBIPS\",\"type\":\"uint16\"},{\"internalType\":\"int8\",\"name\":\"decimals\",\"type\":\"int8\"}],\"internalType\":\"struct FtsoV2Interface.FeedData\",\"name\":\"body\",\"type\":\"tuple\"}],\"internalType\":\"struct FtsoV2Interface.FeedDataWithProof\",\"name\":\"_feedData\",\"type\":\"tuple\"}],\"name\":\"verifyFeedData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getFeedById(bytes21)\":{\"params\":{\"_feedId\":\"The id of the feed.\"},\"returns\":{\"_decimals\":\"The decimal places for the requested feed.\",\"_timestamp\":\"The timestamp of the last update.\",\"_value\":\"The value for the requested feed.\"}},\"getFeedByIdInWei(bytes21)\":{\"params\":{\"_feedId\":\"The id of the feed.\"},\"returns\":{\"_timestamp\":\"The timestamp of the last update.\",\"_value\":\"The value for the requested feed in wei (i.e. with 18 decimal places).\"}},\"getFeedByIndex(uint256)\":{\"params\":{\"_index\":\"The index of the feed, corresponding to feed id in the FastUpdatesConfiguration contract.\"},\"returns\":{\"_decimals\":\"The decimal places for the requested feed.\",\"_timestamp\":\"The timestamp of the last update.\",\"_value\":\"The value for the requested feed.\"}},\"getFeedByIndexInWei(uint256)\":{\"params\":{\"_index\":\"The index of the feed, corresponding to feed id in the FastUpdatesConfiguration contract.\"},\"returns\":{\"_timestamp\":\"The timestamp of the last update.\",\"_value\":\"The value for the requested feed in wei (i.e. with 18 decimal places).\"}},\"getFeedId(uint256)\":{\"params\":{\"_index\":\"The index.\"},\"returns\":{\"_feedId\":\"The feed id.\"}},\"getFeedIndex(bytes21)\":{\"params\":{\"_feedId\":\"The feed id.\"},\"returns\":{\"_index\":\"The index of the feed.\"}},\"getFeedsById(bytes21[])\":{\"params\":{\"_feedIds\":\"The list of feed ids.\"},\"returns\":{\"_decimals\":\"The list of decimal places for the requested feeds.\",\"_timestamp\":\"The timestamp of the last update.\",\"_values\":\"The list of values for the requested feeds.\"}},\"getFeedsByIdInWei(bytes21[])\":{\"params\":{\"_feedIds\":\"Ids of the feeds.\"},\"returns\":{\"_timestamp\":\"The timestamp of the last update.\",\"_values\":\"The list of values for the requested feeds in wei (i.e. with 18 decimal places).\"}},\"getFeedsByIndex(uint256[])\":{\"params\":{\"_indices\":\"Indices of the feeds, corresponding to feed ids in the FastUpdatesConfiguration contract.\"},\"returns\":{\"_decimals\":\"The list of decimal places for the requested feeds.\",\"_timestamp\":\"The timestamp of the last update.\",\"_values\":\"The list of values for the requested feeds.\"}},\"getFeedsByIndexInWei(uint256[])\":{\"params\":{\"_indices\":\"Indices of the feeds, corresponding to feed ids in the FastUpdatesConfiguration contract.\"},\"returns\":{\"_timestamp\":\"The timestamp of the last update.\",\"_values\":\"The list of values for the requested feeds in wei (i.e. with 18 decimal places).\"}},\"verifyFeedData((bytes32[],(uint32,bytes21,int32,uint16,int8)))\":{\"params\":{\"_feedData\":\"Structure containing data about the feed (FeedData structure) and Merkle proof.\"},\"returns\":{\"_0\":\"true if the feed data is valid.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getFeedById(bytes21)\":{\"notice\":\"Returns stored data of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedByIdInWei(bytes21)\":{\"notice\":\"Returns value in wei and timestamp of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedByIndex(uint256)\":{\"notice\":\"Returns stored data of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedByIndexInWei(uint256)\":{\"notice\":\"Returns value in wei and timestamp of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedId(uint256)\":{\"notice\":\"Returns the feed id at a given index. Removed (unused) feed index will return bytes21(0).\"},\"getFeedIndex(bytes21)\":{\"notice\":\"Returns the index of a feed.\"},\"getFeedsById(bytes21[])\":{\"notice\":\"Returns stored data of each feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedsByIdInWei(bytes21[])\":{\"notice\":\"Returns value of each feed and a timestamp. For some feeds, a fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedsByIndex(uint256[])\":{\"notice\":\"Returns stored data of each feed. A fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"getFeedsByIndexInWei(uint256[])\":{\"notice\":\"Returns value in wei of each feed and a timestamp. For some feeds, a fee (calculated by the FeeCalculator contract) may need to be paid.\"},\"verifyFeedData((bytes32[],(uint32,bytes21,int32,uint16,int8)))\":{\"notice\":\"Checks if the feed data is valid (i.e. is part of the confirmed Merkle tree).\"}},\"notice\":\"FtsoV2 long term support interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/FtsoV2Interface.sol\":\"FtsoV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/FtsoV2Interface.sol\":{\"keccak256\":\"0xc086ef303e539b6bab6631f8e57a64dc3b800137677b6e4020b125f72eb49e8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4018f238e99e3726632746f8980b24f4d034a2c8bd262e09be204b499d773d67\",\"dweb:/ipfs/QmdT6DXbZVMn8wVjDc5THgnrE7xRZPXxV9kB2Fc7VgnB5M\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes21","name":"_feedId","type":"bytes21"}],"stateMutability":"payable","type":"function","name":"getFeedById","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"int8","name":"_decimals","type":"int8"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"bytes21","name":"_feedId","type":"bytes21"}],"stateMutability":"payable","type":"function","name":"getFeedByIdInWei","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"payable","type":"function","name":"getFeedByIndex","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"int8","name":"_decimals","type":"int8"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"payable","type":"function","name":"getFeedByIndexInWei","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"stateMutability":"view","type":"function","name":"getFeedId","outputs":[{"internalType":"bytes21","name":"_feedId","type":"bytes21"}]},{"inputs":[{"internalType":"bytes21","name":"_feedId","type":"bytes21"}],"stateMutability":"view","type":"function","name":"getFeedIndex","outputs":[{"internalType":"uint256","name":"_index","type":"uint256"}]},{"inputs":[{"internalType":"bytes21[]","name":"_feedIds","type":"bytes21[]"}],"stateMutability":"payable","type":"function","name":"getFeedsById","outputs":[{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"int8[]","name":"_decimals","type":"int8[]"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"bytes21[]","name":"_feedIds","type":"bytes21[]"}],"stateMutability":"payable","type":"function","name":"getFeedsByIdInWei","outputs":[{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"uint256[]","name":"_indices","type":"uint256[]"}],"stateMutability":"payable","type":"function","name":"getFeedsByIndex","outputs":[{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"int8[]","name":"_decimals","type":"int8[]"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"uint256[]","name":"_indices","type":"uint256[]"}],"stateMutability":"payable","type":"function","name":"getFeedsByIndexInWei","outputs":[{"internalType":"uint256[]","name":"_values","type":"uint256[]"},{"internalType":"uint64","name":"_timestamp","type":"uint64"}]},{"inputs":[{"internalType":"struct FtsoV2Interface.FeedDataWithProof","name":"_feedData","type":"tuple","components":[{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"},{"internalType":"struct FtsoV2Interface.FeedData","name":"body","type":"tuple","components":[{"internalType":"uint32","name":"votingRoundId","type":"uint32"},{"internalType":"bytes21","name":"id","type":"bytes21"},{"internalType":"int32","name":"value","type":"int32"},{"internalType":"uint16","name":"turnoutBIPS","type":"uint16"},{"internalType":"int8","name":"decimals","type":"int8"}]}]}],"stateMutability":"view","type":"function","name":"verifyFeedData","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getFeedById(bytes21)":{"params":{"_feedId":"The id of the feed."},"returns":{"_decimals":"The decimal places for the requested feed.","_timestamp":"The timestamp of the last update.","_value":"The value for the requested feed."}},"getFeedByIdInWei(bytes21)":{"params":{"_feedId":"The id of the feed."},"returns":{"_timestamp":"The timestamp of the last update.","_value":"The value for the requested feed in wei (i.e. with 18 decimal places)."}},"getFeedByIndex(uint256)":{"params":{"_index":"The index of the feed, corresponding to feed id in the FastUpdatesConfiguration contract."},"returns":{"_decimals":"The decimal places for the requested feed.","_timestamp":"The timestamp of the last update.","_value":"The value for the requested feed."}},"getFeedByIndexInWei(uint256)":{"params":{"_index":"The index of the feed, corresponding to feed id in the FastUpdatesConfiguration contract."},"returns":{"_timestamp":"The timestamp of the last update.","_value":"The value for the requested feed in wei (i.e. with 18 decimal places)."}},"getFeedId(uint256)":{"params":{"_index":"The index."},"returns":{"_feedId":"The feed id."}},"getFeedIndex(bytes21)":{"params":{"_feedId":"The feed id."},"returns":{"_index":"The index of the feed."}},"getFeedsById(bytes21[])":{"params":{"_feedIds":"The list of feed ids."},"returns":{"_decimals":"The list of decimal places for the requested feeds.","_timestamp":"The timestamp of the last update.","_values":"The list of values for the requested feeds."}},"getFeedsByIdInWei(bytes21[])":{"params":{"_feedIds":"Ids of the feeds."},"returns":{"_timestamp":"The timestamp of the last update.","_values":"The list of values for the requested feeds in wei (i.e. with 18 decimal places)."}},"getFeedsByIndex(uint256[])":{"params":{"_indices":"Indices of the feeds, corresponding to feed ids in the FastUpdatesConfiguration contract."},"returns":{"_decimals":"The list of decimal places for the requested feeds.","_timestamp":"The timestamp of the last update.","_values":"The list of values for the requested feeds."}},"getFeedsByIndexInWei(uint256[])":{"params":{"_indices":"Indices of the feeds, corresponding to feed ids in the FastUpdatesConfiguration contract."},"returns":{"_timestamp":"The timestamp of the last update.","_values":"The list of values for the requested feeds in wei (i.e. with 18 decimal places)."}},"verifyFeedData((bytes32[],(uint32,bytes21,int32,uint16,int8)))":{"params":{"_feedData":"Structure containing data about the feed (FeedData structure) and Merkle proof."},"returns":{"_0":"true if the feed data is valid."}}},"version":1},"userdoc":{"kind":"user","methods":{"getFeedById(bytes21)":{"notice":"Returns stored data of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedByIdInWei(bytes21)":{"notice":"Returns value in wei and timestamp of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedByIndex(uint256)":{"notice":"Returns stored data of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedByIndexInWei(uint256)":{"notice":"Returns value in wei and timestamp of a feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedId(uint256)":{"notice":"Returns the feed id at a given index. Removed (unused) feed index will return bytes21(0)."},"getFeedIndex(bytes21)":{"notice":"Returns the index of a feed."},"getFeedsById(bytes21[])":{"notice":"Returns stored data of each feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedsByIdInWei(bytes21[])":{"notice":"Returns value of each feed and a timestamp. For some feeds, a fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedsByIndex(uint256[])":{"notice":"Returns stored data of each feed. A fee (calculated by the FeeCalculator contract) may need to be paid."},"getFeedsByIndexInWei(uint256[])":{"notice":"Returns value in wei of each feed and a timestamp. For some feeds, a fee (calculated by the FeeCalculator contract) may need to be paid."},"verifyFeedData((bytes32[],(uint32,bytes21,int32,uint16,int8)))":{"notice":"Checks if the feed data is valid (i.e. is part of the confirmed Merkle tree)."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/FtsoV2Interface.sol":"FtsoV2Interface"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/FtsoV2Interface.sol":{"keccak256":"0xc086ef303e539b6bab6631f8e57a64dc3b800137677b6e4020b125f72eb49e8f","urls":["bzz-raw://4018f238e99e3726632746f8980b24f4d034a2c8bd262e09be204b499d773d67","dweb:/ipfs/QmdT6DXbZVMn8wVjDc5THgnrE7xRZPXxV9kB2Fc7VgnB5M"],"license":"MIT"}},"version":1},"id":1}