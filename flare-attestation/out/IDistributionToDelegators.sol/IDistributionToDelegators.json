{"abi":[{"type":"function","name":"autoClaim","inputs":[{"name":"_rewardOwners","type":"address[]","internalType":"address[]"},{"name":"_month","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claim","inputs":[{"name":"_rewardOwner","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address"},{"name":"_month","type":"uint256","internalType":"uint256"},{"name":"_wrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getClaimableAmount","inputs":[{"name":"_month","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_amountWei","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimableAmountOf","inputs":[{"name":"_account","type":"address","internalType":"address"},{"name":"_month","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_amountWei","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimableMonths","inputs":[],"outputs":[{"name":"_startMonth","type":"uint256","internalType":"uint256"},{"name":"_endMonth","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentMonth","inputs":[],"outputs":[{"name":"_currentMonth","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getMonthToExpireNext","inputs":[],"outputs":[{"name":"_monthToExpireNext","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"nextClaimableMonth","inputs":[{"name":"_rewardOwner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"optOutOfAirdrop","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"AccountClaimed","inputs":[{"name":"whoClaimed","type":"address","indexed":true,"internalType":"address"},{"name":"sentTo","type":"address","indexed":true,"internalType":"address"},{"name":"month","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountWei","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"AccountOptOut","inputs":[{"name":"theAccount","type":"address","indexed":true,"internalType":"address"},{"name":"confirmed","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"EntitlementStart","inputs":[{"name":"entitlementStartTs","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UseGoodRandomSet","inputs":[{"name":"useGoodRandom","type":"bool","indexed":false,"internalType":"bool"},{"name":"maxWaitForGoodRandomSeconds","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"autoClaim(address[],uint256)":"8dc305fa","claim(address,address,uint256,bool)":"b2c12192","getClaimableAmount(uint256)":"7d8ca242","getClaimableAmountOf(address,uint256)":"2e658452","getClaimableMonths()":"02573715","getCurrentMonth()":"ddd1b67e","getMonthToExpireNext()":"aa7579ac","nextClaimableMonth(address)":"f94fcc6d","optOutOfAirdrop()":"f2a1f767"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoClaimed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sentTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountWei\",\"type\":\"uint256\"}],\"name\":\"AccountClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"theAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"confirmed\",\"type\":\"bool\"}],\"name\":\"AccountOptOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entitlementStartTs\",\"type\":\"uint256\"}],\"name\":\"EntitlementStart\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useGoodRandom\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxWaitForGoodRandomSeconds\",\"type\":\"uint256\"}],\"name\":\"UseGoodRandomSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_rewardOwners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"autoClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_wrap\",\"type\":\"bool\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"getClaimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"getClaimableAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountWei\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimableMonths\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_startMonth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endMonth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentMonth\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMonthToExpireNext\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_monthToExpireNext\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardOwner\",\"type\":\"address\"}],\"name\":\"nextClaimableMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optOutOfAirdrop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"autoClaim(address[],uint256)\":{\"params\":{\"_month\":\"last month to claim for\",\"_rewardOwners\":\"list of reward owners to claim for\"}},\"claim(address,address,uint256,bool)\":{\"params\":{\"_month\":\"last month to claim for\",\"_recipient\":\"address to transfer funds to\",\"_rewardOwner\":\"address of the reward owner\",\"_wrap\":\"should reward be wrapped immediately\"},\"returns\":{\"_rewardAmount\":\"       amount of total claimed rewards\"}},\"getClaimableAmount(uint256)\":{\"params\":{\"_month\":\"month of interest\"},\"returns\":{\"_amountWei\":\"amount of wei available for this account and provided month\"}},\"getClaimableAmountOf(address,uint256)\":{\"params\":{\"_account\":\"the address of an account we want to get the claimable amount of wei\",\"_month\":\"month of interest\"},\"returns\":{\"_amountWei\":\"amount of wei available for provided account and month\"}},\"getClaimableMonths()\":{\"returns\":{\"_endMonth\":\"last claimable month\",\"_startMonth\":\"first claimable month\"}},\"getCurrentMonth()\":{\"returns\":{\"_currentMonth\":\"Current month, 0 before entitlementStartTs\"}},\"getMonthToExpireNext()\":{\"returns\":{\"_monthToExpireNext\":\"Month that will expire next, 1100 when last month expired\"}},\"nextClaimableMonth(address)\":{\"params\":{\"_rewardOwner\":\"address of the reward owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"autoClaim(address[],uint256)\":{\"notice\":\"Allows batch claiming for the list of '_rewardOwners' up to given '_month'.If reward owner has enabled delegation account, rewards are also claimed for that delegation account and   total claimed amount is sent to that delegation account, otherwise claimed amount is sent to owner's account.Claimed amount is automatically wrapped.Method can be used by reward owner or executor. If executor is registered with fee > 0,   then fee is paid to executor for each claimed address from the list.\"},\"claim(address,address,uint256,bool)\":{\"notice\":\"Allows the sender to claim or wrap rewards for reward owner.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`.\"},\"getClaimableAmount(uint256)\":{\"notice\":\"get claimable amount of wei for requesting account for specified month\"},\"getClaimableAmountOf(address,uint256)\":{\"notice\":\"get claimable amount of wei for account for specified month\"},\"getClaimableMonths()\":{\"notice\":\"Returns claimable months - reverts if none\"},\"getCurrentMonth()\":{\"notice\":\"Returns the current month\"},\"getMonthToExpireNext()\":{\"notice\":\"Returns the month that will expire next\"},\"nextClaimableMonth(address)\":{\"notice\":\"Returns the next claimable month for '_rewardOwner'.\"},\"optOutOfAirdrop()\":{\"notice\":\"Method to opt-out of receiving airdrop rewards\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IDistributionToDelegators.sol\":\"IDistributionToDelegators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IDistributionToDelegators.sol\":{\"keccak256\":\"0x57673c17e802148dafc7137c212e6308e5a6836fc708dc168f66a488ab309261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcabffb2e4320caa2163c0002d8594c363fe0867e4c3661bb3c49dc0bd9d04b3\",\"dweb:/ipfs/QmfQM75ygzUratuZ9n3fXE2H6h7xtF433HLbu8ajWccetr\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"whoClaimed","type":"address","indexed":true},{"internalType":"address","name":"sentTo","type":"address","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountWei","type":"uint256","indexed":false}],"type":"event","name":"AccountClaimed","anonymous":false},{"inputs":[{"internalType":"address","name":"theAccount","type":"address","indexed":true},{"internalType":"bool","name":"confirmed","type":"bool","indexed":false}],"type":"event","name":"AccountOptOut","anonymous":false},{"inputs":[{"internalType":"uint256","name":"entitlementStartTs","type":"uint256","indexed":false}],"type":"event","name":"EntitlementStart","anonymous":false},{"inputs":[{"internalType":"bool","name":"useGoodRandom","type":"bool","indexed":false},{"internalType":"uint256","name":"maxWaitForGoodRandomSeconds","type":"uint256","indexed":false}],"type":"event","name":"UseGoodRandomSet","anonymous":false},{"inputs":[{"internalType":"address[]","name":"_rewardOwners","type":"address[]"},{"internalType":"uint256","name":"_month","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"autoClaim"},{"inputs":[{"internalType":"address","name":"_rewardOwner","type":"address"},{"internalType":"address","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_month","type":"uint256"},{"internalType":"bool","name":"_wrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"claim","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_month","type":"uint256"}],"stateMutability":"view","type":"function","name":"getClaimableAmount","outputs":[{"internalType":"uint256","name":"_amountWei","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_month","type":"uint256"}],"stateMutability":"view","type":"function","name":"getClaimableAmountOf","outputs":[{"internalType":"uint256","name":"_amountWei","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getClaimableMonths","outputs":[{"internalType":"uint256","name":"_startMonth","type":"uint256"},{"internalType":"uint256","name":"_endMonth","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentMonth","outputs":[{"internalType":"uint256","name":"_currentMonth","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getMonthToExpireNext","outputs":[{"internalType":"uint256","name":"_monthToExpireNext","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_rewardOwner","type":"address"}],"stateMutability":"view","type":"function","name":"nextClaimableMonth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"optOutOfAirdrop"}],"devdoc":{"kind":"dev","methods":{"autoClaim(address[],uint256)":{"params":{"_month":"last month to claim for","_rewardOwners":"list of reward owners to claim for"}},"claim(address,address,uint256,bool)":{"params":{"_month":"last month to claim for","_recipient":"address to transfer funds to","_rewardOwner":"address of the reward owner","_wrap":"should reward be wrapped immediately"},"returns":{"_rewardAmount":"       amount of total claimed rewards"}},"getClaimableAmount(uint256)":{"params":{"_month":"month of interest"},"returns":{"_amountWei":"amount of wei available for this account and provided month"}},"getClaimableAmountOf(address,uint256)":{"params":{"_account":"the address of an account we want to get the claimable amount of wei","_month":"month of interest"},"returns":{"_amountWei":"amount of wei available for provided account and month"}},"getClaimableMonths()":{"returns":{"_endMonth":"last claimable month","_startMonth":"first claimable month"}},"getCurrentMonth()":{"returns":{"_currentMonth":"Current month, 0 before entitlementStartTs"}},"getMonthToExpireNext()":{"returns":{"_monthToExpireNext":"Month that will expire next, 1100 when last month expired"}},"nextClaimableMonth(address)":{"params":{"_rewardOwner":"address of the reward owner"}}},"version":1},"userdoc":{"kind":"user","methods":{"autoClaim(address[],uint256)":{"notice":"Allows batch claiming for the list of '_rewardOwners' up to given '_month'.If reward owner has enabled delegation account, rewards are also claimed for that delegation account and   total claimed amount is sent to that delegation account, otherwise claimed amount is sent to owner's account.Claimed amount is automatically wrapped.Method can be used by reward owner or executor. If executor is registered with fee > 0,   then fee is paid to executor for each claimed address from the list."},"claim(address,address,uint256,bool)":{"notice":"Allows the sender to claim or wrap rewards for reward owner.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`."},"getClaimableAmount(uint256)":{"notice":"get claimable amount of wei for requesting account for specified month"},"getClaimableAmountOf(address,uint256)":{"notice":"get claimable amount of wei for account for specified month"},"getClaimableMonths()":{"notice":"Returns claimable months - reverts if none"},"getCurrentMonth()":{"notice":"Returns the current month"},"getMonthToExpireNext()":{"notice":"Returns the month that will expire next"},"nextClaimableMonth(address)":{"notice":"Returns the next claimable month for '_rewardOwner'."},"optOutOfAirdrop()":{"notice":"Method to opt-out of receiving airdrop rewards"}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IDistributionToDelegators.sol":"IDistributionToDelegators"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IDistributionToDelegators.sol":{"keccak256":"0x57673c17e802148dafc7137c212e6308e5a6836fc708dc168f66a488ab309261","urls":["bzz-raw://dcabffb2e4320caa2163c0002d8594c363fe0867e4c3661bb3c49dc0bd9d04b3","dweb:/ipfs/QmfQM75ygzUratuZ9n3fXE2H6h7xtF433HLbu8ajWccetr"],"license":"MIT"}},"version":1},"id":6}