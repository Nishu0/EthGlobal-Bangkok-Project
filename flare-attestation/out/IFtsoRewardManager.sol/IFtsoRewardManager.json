{"abi":[{"type":"function","name":"active","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"autoClaim","inputs":[{"name":"_rewardOwners","type":"address[]","internalType":"address[]"},{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"claim","inputs":[{"name":"_rewardOwner","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address payable"},{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"},{"name":"_wrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimFromDataProviders","inputs":[{"name":"_rewardOwner","type":"address","internalType":"address"},{"name":"_recipient","type":"address","internalType":"address payable"},{"name":"_rewardEpochs","type":"uint256[]","internalType":"uint256[]"},{"name":"_dataProviders","type":"address[]","internalType":"address[]"},{"name":"_wrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimReward","inputs":[{"name":"_recipient","type":"address","internalType":"address payable"},{"name":"_rewardEpochs","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"claimRewardFromDataProviders","inputs":[{"name":"_recipient","type":"address","internalType":"address payable"},{"name":"_rewardEpochs","type":"uint256[]","internalType":"uint256[]"},{"name":"_dataProviders","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getClaimedReward","inputs":[{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"},{"name":"_dataProvider","type":"address","internalType":"address"},{"name":"_claimer","type":"address","internalType":"address"}],"outputs":[{"name":"_claimed","type":"bool","internalType":"bool"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentRewardEpoch","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDataProviderCurrentFeePercentage","inputs":[{"name":"_dataProvider","type":"address","internalType":"address"}],"outputs":[{"name":"_feePercentageBIPS","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDataProviderFeePercentage","inputs":[{"name":"_dataProvider","type":"address","internalType":"address"},{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_feePercentageBIPS","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDataProviderPerformanceInfo","inputs":[{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"},{"name":"_dataProvider","type":"address","internalType":"address"}],"outputs":[{"name":"_rewardAmount","type":"uint256","internalType":"uint256"},{"name":"_votePowerIgnoringRevocation","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getDataProviderScheduledFeePercentageChanges","inputs":[{"name":"_dataProvider","type":"address","internalType":"address"}],"outputs":[{"name":"_feePercentageBIPS","type":"uint256[]","internalType":"uint256[]"},{"name":"_validFromEpoch","type":"uint256[]","internalType":"uint256[]"},{"name":"_fixed","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"getEpochReward","inputs":[{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_totalReward","type":"uint256","internalType":"uint256"},{"name":"_claimedReward","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEpochsWithClaimableRewards","inputs":[],"outputs":[{"name":"_startEpochId","type":"uint256","internalType":"uint256"},{"name":"_endEpochId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getEpochsWithUnclaimedRewards","inputs":[{"name":"_beneficiary","type":"address","internalType":"address"}],"outputs":[{"name":"_epochIds","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getInitialRewardEpoch","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardEpochToExpireNext","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRewardEpochVotePowerBlock","inputs":[{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getStateOfRewards","inputs":[{"name":"_beneficiary","type":"address","internalType":"address"},{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_dataProviders","type":"address[]","internalType":"address[]"},{"name":"_rewardAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"_claimed","type":"bool[]","internalType":"bool[]"},{"name":"_claimable","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getStateOfRewardsFromDataProviders","inputs":[{"name":"_beneficiary","type":"address","internalType":"address"},{"name":"_rewardEpoch","type":"uint256","internalType":"uint256"},{"name":"_dataProviders","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"_rewardAmounts","type":"uint256[]","internalType":"uint256[]"},{"name":"_claimed","type":"bool[]","internalType":"bool[]"},{"name":"_claimable","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nextClaimableRewardEpoch","inputs":[{"name":"_rewardOwner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"setDataProviderFeePercentage","inputs":[{"name":"_feePercentageBIPS","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_validFromEpoch","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"FeePercentageChanged","inputs":[{"name":"dataProvider","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"validFromEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"FtsoRewardManagerActivated","inputs":[{"name":"ftsoRewardManager","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"FtsoRewardManagerDeactivated","inputs":[{"name":"ftsoRewardManager","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"RewardClaimed","inputs":[{"name":"dataProvider","type":"address","indexed":true,"internalType":"address"},{"name":"whoClaimed","type":"address","indexed":true,"internalType":"address"},{"name":"sentTo","type":"address","indexed":true,"internalType":"address"},{"name":"rewardEpoch","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardClaimsEnabled","inputs":[{"name":"rewardEpochId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardClaimsExpired","inputs":[{"name":"rewardEpochId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"RewardsDistributed","inputs":[{"name":"ftso","type":"address","indexed":true,"internalType":"address"},{"name":"epochId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"addresses","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"rewards","type":"uint256[]","indexed":false,"internalType":"uint256[]"}],"anonymous":false},{"type":"event","name":"UnearnedRewardsAccrued","inputs":[{"name":"epochId","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"reward","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"active()":"02fb0c5e","autoClaim(address[],uint256)":"8dc305fa","claim(address,address,uint256,bool)":"b2c12192","claimFromDataProviders(address,address,uint256[],address[],bool)":"21bb25af","claimReward(address,uint256[])":"b2af870a","claimRewardFromDataProviders(address,uint256[],address[])":"d20bb542","getClaimedReward(uint256,address,address)":"85b4c538","getCurrentRewardEpoch()":"e7c830d4","getDataProviderCurrentFeePercentage(address)":"cfbcd25f","getDataProviderFeePercentage(address,uint256)":"961c00ed","getDataProviderPerformanceInfo(uint256,address)":"eb82dd7f","getDataProviderScheduledFeePercentageChanges(address)":"33b7971e","getEpochReward(uint256)":"d418634a","getEpochsWithClaimableRewards()":"0441218e","getEpochsWithUnclaimedRewards(address)":"b4a2043d","getInitialRewardEpoch()":"3123b7d8","getRewardEpochToExpireNext()":"3e7ff857","getRewardEpochVotePowerBlock(uint256)":"f2edab5a","getStateOfRewards(address,uint256)":"a4472c10","getStateOfRewardsFromDataProviders(address,uint256,address[])":"e416b7e1","nextClaimableRewardEpoch(address)":"69b91b59","setDataProviderFeePercentage(uint256)":"16e69328"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dataProvider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validFromEpoch\",\"type\":\"uint256\"}],\"name\":\"FeePercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ftsoRewardManager\",\"type\":\"address\"}],\"name\":\"FtsoRewardManagerActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"ftsoRewardManager\",\"type\":\"address\"}],\"name\":\"FtsoRewardManagerDeactivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dataProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"whoClaimed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sentTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardEpoch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"RewardClaimsEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"RewardClaimsExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ftso\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"rewards\",\"type\":\"uint256[]\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epochId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"UnearnedRewardsAccrued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"active\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_rewardOwners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"}],\"name\":\"autoClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardOwner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_wrap\",\"type\":\"bool\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardOwner\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardEpochs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_dataProviders\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_wrap\",\"type\":\"bool\"}],\"name\":\"claimFromDataProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardEpochs\",\"type\":\"uint256[]\"}],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardEpochs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"_dataProviders\",\"type\":\"address[]\"}],\"name\":\"claimRewardFromDataProviders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dataProvider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"getClaimedReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_claimed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRewardEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dataProvider\",\"type\":\"address\"}],\"name\":\"getDataProviderCurrentFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercentageBIPS\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dataProvider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"}],\"name\":\"getDataProviderFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercentageBIPS\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_dataProvider\",\"type\":\"address\"}],\"name\":\"getDataProviderPerformanceInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_votePowerIgnoringRevocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dataProvider\",\"type\":\"address\"}],\"name\":\"getDataProviderScheduledFeePercentageChanges\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_feePercentageBIPS\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_validFromEpoch\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_fixed\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"}],\"name\":\"getEpochReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimedReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEpochsWithClaimableRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_startEpochId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endEpochId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getEpochsWithUnclaimedRewards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_epochIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInitialRewardEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardEpochToExpireNext\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"}],\"name\":\"getRewardEpochVotePowerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"}],\"name\":\"getStateOfRewards\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_dataProviders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rewardAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_claimed\",\"type\":\"bool[]\"},{\"internalType\":\"bool\",\"name\":\"_claimable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpoch\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_dataProviders\",\"type\":\"address[]\"}],\"name\":\"getStateOfRewardsFromDataProviders\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_rewardAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_claimed\",\"type\":\"bool[]\"},{\"internalType\":\"bool\",\"name\":\"_claimable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardOwner\",\"type\":\"address\"}],\"name\":\"nextClaimableRewardEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercentageBIPS\",\"type\":\"uint256\"}],\"name\":\"setDataProviderFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_validFromEpoch\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"autoClaim(address[],uint256)\":{\"params\":{\"_rewardEpoch\":\"last reward epoch to claim for\",\"_rewardOwners\":\"list of reward owners to claim for\"}},\"claim(address,address,uint256,bool)\":{\"details\":\"Reverts if `msg.sender` is delegating by amount\",\"params\":{\"_recipient\":\"address to transfer funds to\",\"_rewardEpoch\":\"last reward epoch to claim for\",\"_rewardOwner\":\"address of the reward owner\",\"_wrap\":\"should reward be wrapped immediately\"},\"returns\":{\"_rewardAmount\":\"       amount of total claimed rewards\"}},\"claimFromDataProviders(address,address,uint256[],address[],bool)\":{\"details\":\"Function can only be used for explicit delegations.\",\"params\":{\"_dataProviders\":\"array of addresses representing data providers to claim the reward from\",\"_recipient\":\"address to transfer funds to\",\"_rewardEpochs\":\"array of reward epoch numbers to claim for\",\"_rewardOwner\":\"address of the reward owner\",\"_wrap\":\"should reward be wrapped immediately\"},\"returns\":{\"_rewardAmount\":\"       amount of total claimed rewards\"}},\"claimReward(address,uint256[])\":{\"details\":\"Reverts if `msg.sender` is delegating by amountClaims for all unclaimed reward epochs to the 'max(_rewardEpochs)'.Retained for backward compatibility.This function is deprecated - use `claim` instead.\",\"params\":{\"_recipient\":\"address to transfer funds to\",\"_rewardEpochs\":\"array of reward epoch numbers to claim for\"},\"returns\":{\"_rewardAmount\":\"       amount of total claimed rewards\"}},\"claimRewardFromDataProviders(address,uint256[],address[])\":{\"details\":\"Function can only be used for explicit delegations.This function is deprecated - use `claimFromDataProviders` instead.\",\"params\":{\"_dataProviders\":\"array of addresses representing data providers to claim the reward from\",\"_recipient\":\"address to transfer funds to\",\"_rewardEpochs\":\"array of reward epoch numbers to claim for\"},\"returns\":{\"_rewardAmount\":\"       amount of total claimed rewards\"}},\"getClaimedReward(uint256,address,address)\":{\"params\":{\"_claimer\":\"address representing the claimer\",\"_dataProvider\":\"address representing the data provider\",\"_rewardEpoch\":\"reward epoch number\"},\"returns\":{\"_amount\":\"             number representing the claimed amount\",\"_claimed\":\"            boolean indicating if reward has been claimed\"}},\"getDataProviderCurrentFeePercentage(address)\":{\"params\":{\"_dataProvider\":\"address representing data provider\"}},\"getDataProviderFeePercentage(address,uint256)\":{\"params\":{\"_dataProvider\":\"address representing data provider\",\"_rewardEpoch\":\"reward epoch number\"}},\"getDataProviderPerformanceInfo(uint256,address)\":{\"params\":{\"_dataProvider\":\"address representing the data provider\",\"_rewardEpoch\":\"reward epoch number\"},\"returns\":{\"_rewardAmount\":\"                   number representing the amount of rewards\",\"_votePowerIgnoringRevocation\":\"    number representing the vote power ignoring revocations\"}},\"getDataProviderScheduledFeePercentageChanges(address)\":{\"params\":{\"_dataProvider\":\"address representing data provider\"},\"returns\":{\"_feePercentageBIPS\":\"  positional array of fee percentages in BIPS\",\"_fixed\":\"              positional array of boolean values indicating if settings are subjected to change\",\"_validFromEpoch\":\"     positional array of block numbers the fee settings are effective from\"}},\"getEpochReward(uint256)\":{\"params\":{\"_rewardEpoch\":\"reward epoch number\"},\"returns\":{\"_claimedReward\":\"      number representing the amount of total epoch reward that has been claimed\",\"_totalReward\":\"        number representing the total epoch reward\"}},\"getEpochsWithClaimableRewards()\":{\"params\":{\"_endEpochId\":\"the newest epoch id that allows reward claiming\",\"_startEpochId\":\"the oldest epoch id that allows reward claiming\"}},\"getEpochsWithUnclaimedRewards(address)\":{\"details\":\"Reverts when queried with `_beneficiary` delegating by amount\",\"params\":{\"_beneficiary\":\"address of reward beneficiary\"},\"returns\":{\"_epochIds\":\"           array of epoch ids\"}},\"getRewardEpochToExpireNext()\":{\"returns\":{\"_0\":\"Reward epoch id that will expire next\"}},\"getRewardEpochVotePowerBlock(uint256)\":{\"params\":{\"_rewardEpoch\":\"reward epoch number\"}},\"getStateOfRewards(address,uint256)\":{\"details\":\"Reverts when queried with `_beneficiary` delegating by amount\",\"params\":{\"_beneficiary\":\"address of reward beneficiary\",\"_rewardEpoch\":\"reward epoch number\"},\"returns\":{\"_claimable\":\"          boolean value indicating if rewards are claimable\",\"_claimed\":\"            positional array of boolean values indicating if reward is claimed\",\"_dataProviders\":\"      positional array of addresses representing data providers\",\"_rewardAmounts\":\"      positional array of reward amounts\"}},\"getStateOfRewardsFromDataProviders(address,uint256,address[])\":{\"params\":{\"_beneficiary\":\"address of reward beneficiary\",\"_dataProviders\":\"positional array of addresses representing data providers\",\"_rewardEpoch\":\"reward epoch number\"},\"returns\":{\"_claimable\":\"          boolean value indicating if rewards are claimable\",\"_claimed\":\"            positional array of boolean values indicating if reward is claimed\",\"_rewardAmounts\":\"      positional array of reward amounts\"}},\"nextClaimableRewardEpoch(address)\":{\"params\":{\"_rewardOwner\":\"address of the reward owner\"}},\"setDataProviderFeePercentage(uint256)\":{\"params\":{\"_feePercentageBIPS\":\"number representing fee percentage in BIPS\"},\"returns\":{\"_validFromEpoch\":\"     reward epoch number when the setting becomes effective.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"active()\":{\"notice\":\"Allows reward claiming\"},\"autoClaim(address[],uint256)\":{\"notice\":\"Allows batch claiming for the list of '_rewardOwners' and for all unclaimed epochs <= '_rewardEpoch'.If reward owner has enabled delegation account, rewards are also claimed for that delegation account and   total claimed amount is sent to that delegation account, otherwise claimed amount is sent to owner's account.Claimed amount is automatically wrapped.Method can be used by reward owner or executor. If executor is registered with fee > 0,   then fee is paid to executor for each claimed address from the list.\"},\"claim(address,address,uint256,bool)\":{\"notice\":\"Allows the sender to claim or wrap rewards for reward owner.This function is intended to be used to claim rewards in case of delegation by percentage.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`.\"},\"claimFromDataProviders(address,address,uint256[],address[],bool)\":{\"notice\":\"Allows the sender to claim or wrap rewards for reward owner from specified data providers.This function is intended to be used to claim rewards in case of delegation by amount.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`.\"},\"claimReward(address,uint256[])\":{\"notice\":\"Allows a percentage delegator to claim rewards.This function is intended to be used to claim rewards in case of delegation by percentage.\"},\"claimRewardFromDataProviders(address,uint256[],address[])\":{\"notice\":\"Allows the sender to claim rewards from specified data providers.This function is intended to be used to claim rewards in case of delegation by amount.\"},\"getClaimedReward(uint256,address,address)\":{\"notice\":\"Returns the information on claimed reward of `_dataProvider` for `_rewardEpoch` by `_claimer`\"},\"getCurrentRewardEpoch()\":{\"notice\":\"Return current reward epoch number\"},\"getDataProviderCurrentFeePercentage(address)\":{\"notice\":\"Returns the current fee percentage of `_dataProvider`\"},\"getDataProviderFeePercentage(address,uint256)\":{\"notice\":\"Returns the fee percentage of `_dataProvider` at `_rewardEpoch`\"},\"getDataProviderPerformanceInfo(uint256,address)\":{\"notice\":\"Returns the information on rewards and initial vote power of `_dataProvider` for `_rewardEpoch`\"},\"getDataProviderScheduledFeePercentageChanges(address)\":{\"notice\":\"Returns the scheduled fee percentage changes of `_dataProvider`\"},\"getEpochReward(uint256)\":{\"notice\":\"Returns information on epoch reward\"},\"getEpochsWithClaimableRewards()\":{\"notice\":\"Returns the start and the end of the reward epoch range for which the reward is claimable\"},\"getEpochsWithUnclaimedRewards(address)\":{\"notice\":\"Returns the array of claimable epoch ids for which the reward has not yet been claimed\"},\"getInitialRewardEpoch()\":{\"notice\":\"Return initial reward epoch number\"},\"getRewardEpochToExpireNext()\":{\"notice\":\"Return reward epoch that will expire, when new reward epoch will start\"},\"getRewardEpochVotePowerBlock(uint256)\":{\"notice\":\"Return reward epoch vote power block\"},\"getStateOfRewards(address,uint256)\":{\"notice\":\"Returns the state of rewards for `_beneficiary` at `_rewardEpoch`\"},\"getStateOfRewardsFromDataProviders(address,uint256,address[])\":{\"notice\":\"Returns the state of rewards for `_beneficiary` at `_rewardEpoch` from `_dataProviders`\"},\"nextClaimableRewardEpoch(address)\":{\"notice\":\"Returns the next claimable reward epoch for '_rewardOwner'.\"},\"setDataProviderFeePercentage(uint256)\":{\"notice\":\"Allows data provider to set (or update last) fee percentage.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IFtsoRewardManager.sol\":\"IFtsoRewardManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IFtsoRewardManager.sol\":{\"keccak256\":\"0x03ea94df67caf6f0a31f2d24a08e4ecb3703d177ae181ecf3fd2ddd4d59ac102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33ec71d0ecae0eef0274add901ed4432c1e564db7e2fd917364896eb2b4c78a0\",\"dweb:/ipfs/QmRQTf37obE4yka96BFzENvz7hEnYXY6UATEfKvJUkYbwn\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"dataProvider","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false},{"internalType":"uint256","name":"validFromEpoch","type":"uint256","indexed":false}],"type":"event","name":"FeePercentageChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"ftsoRewardManager","type":"address","indexed":false}],"type":"event","name":"FtsoRewardManagerActivated","anonymous":false},{"inputs":[{"internalType":"address","name":"ftsoRewardManager","type":"address","indexed":false}],"type":"event","name":"FtsoRewardManagerDeactivated","anonymous":false},{"inputs":[{"internalType":"address","name":"dataProvider","type":"address","indexed":true},{"internalType":"address","name":"whoClaimed","type":"address","indexed":true},{"internalType":"address","name":"sentTo","type":"address","indexed":true},{"internalType":"uint256","name":"rewardEpoch","type":"uint256","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"RewardClaimed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"rewardEpochId","type":"uint256","indexed":false}],"type":"event","name":"RewardClaimsEnabled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"rewardEpochId","type":"uint256","indexed":false}],"type":"event","name":"RewardClaimsExpired","anonymous":false},{"inputs":[{"internalType":"address","name":"ftso","type":"address","indexed":true},{"internalType":"uint256","name":"epochId","type":"uint256","indexed":false},{"internalType":"address[]","name":"addresses","type":"address[]","indexed":false},{"internalType":"uint256[]","name":"rewards","type":"uint256[]","indexed":false}],"type":"event","name":"RewardsDistributed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"epochId","type":"uint256","indexed":false},{"internalType":"uint256","name":"reward","type":"uint256","indexed":false}],"type":"event","name":"UnearnedRewardsAccrued","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"active","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"_rewardOwners","type":"address[]"},{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"autoClaim"},{"inputs":[{"internalType":"address","name":"_rewardOwner","type":"address"},{"internalType":"address payable","name":"_recipient","type":"address"},{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"},{"internalType":"bool","name":"_wrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"claim","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_rewardOwner","type":"address"},{"internalType":"address payable","name":"_recipient","type":"address"},{"internalType":"uint256[]","name":"_rewardEpochs","type":"uint256[]"},{"internalType":"address[]","name":"_dataProviders","type":"address[]"},{"internalType":"bool","name":"_wrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"claimFromDataProviders","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}]},{"inputs":[{"internalType":"address payable","name":"_recipient","type":"address"},{"internalType":"uint256[]","name":"_rewardEpochs","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"claimReward","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}]},{"inputs":[{"internalType":"address payable","name":"_recipient","type":"address"},{"internalType":"uint256[]","name":"_rewardEpochs","type":"uint256[]"},{"internalType":"address[]","name":"_dataProviders","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"claimRewardFromDataProviders","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"},{"internalType":"address","name":"_dataProvider","type":"address"},{"internalType":"address","name":"_claimer","type":"address"}],"stateMutability":"view","type":"function","name":"getClaimedReward","outputs":[{"internalType":"bool","name":"_claimed","type":"bool"},{"internalType":"uint256","name":"_amount","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentRewardEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_dataProvider","type":"address"}],"stateMutability":"view","type":"function","name":"getDataProviderCurrentFeePercentage","outputs":[{"internalType":"uint256","name":"_feePercentageBIPS","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_dataProvider","type":"address"},{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"}],"stateMutability":"view","type":"function","name":"getDataProviderFeePercentage","outputs":[{"internalType":"uint256","name":"_feePercentageBIPS","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"},{"internalType":"address","name":"_dataProvider","type":"address"}],"stateMutability":"view","type":"function","name":"getDataProviderPerformanceInfo","outputs":[{"internalType":"uint256","name":"_rewardAmount","type":"uint256"},{"internalType":"uint256","name":"_votePowerIgnoringRevocation","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_dataProvider","type":"address"}],"stateMutability":"view","type":"function","name":"getDataProviderScheduledFeePercentageChanges","outputs":[{"internalType":"uint256[]","name":"_feePercentageBIPS","type":"uint256[]"},{"internalType":"uint256[]","name":"_validFromEpoch","type":"uint256[]"},{"internalType":"bool[]","name":"_fixed","type":"bool[]"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"}],"stateMutability":"view","type":"function","name":"getEpochReward","outputs":[{"internalType":"uint256","name":"_totalReward","type":"uint256"},{"internalType":"uint256","name":"_claimedReward","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getEpochsWithClaimableRewards","outputs":[{"internalType":"uint256","name":"_startEpochId","type":"uint256"},{"internalType":"uint256","name":"_endEpochId","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"}],"stateMutability":"view","type":"function","name":"getEpochsWithUnclaimedRewards","outputs":[{"internalType":"uint256[]","name":"_epochIds","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getInitialRewardEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRewardEpochToExpireNext","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRewardEpochVotePowerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"}],"stateMutability":"view","type":"function","name":"getStateOfRewards","outputs":[{"internalType":"address[]","name":"_dataProviders","type":"address[]"},{"internalType":"uint256[]","name":"_rewardAmounts","type":"uint256[]"},{"internalType":"bool[]","name":"_claimed","type":"bool[]"},{"internalType":"bool","name":"_claimable","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_rewardEpoch","type":"uint256"},{"internalType":"address[]","name":"_dataProviders","type":"address[]"}],"stateMutability":"view","type":"function","name":"getStateOfRewardsFromDataProviders","outputs":[{"internalType":"uint256[]","name":"_rewardAmounts","type":"uint256[]"},{"internalType":"bool[]","name":"_claimed","type":"bool[]"},{"internalType":"bool","name":"_claimable","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_rewardOwner","type":"address"}],"stateMutability":"view","type":"function","name":"nextClaimableRewardEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_feePercentageBIPS","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setDataProviderFeePercentage","outputs":[{"internalType":"uint256","name":"_validFromEpoch","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"autoClaim(address[],uint256)":{"params":{"_rewardEpoch":"last reward epoch to claim for","_rewardOwners":"list of reward owners to claim for"}},"claim(address,address,uint256,bool)":{"details":"Reverts if `msg.sender` is delegating by amount","params":{"_recipient":"address to transfer funds to","_rewardEpoch":"last reward epoch to claim for","_rewardOwner":"address of the reward owner","_wrap":"should reward be wrapped immediately"},"returns":{"_rewardAmount":"       amount of total claimed rewards"}},"claimFromDataProviders(address,address,uint256[],address[],bool)":{"details":"Function can only be used for explicit delegations.","params":{"_dataProviders":"array of addresses representing data providers to claim the reward from","_recipient":"address to transfer funds to","_rewardEpochs":"array of reward epoch numbers to claim for","_rewardOwner":"address of the reward owner","_wrap":"should reward be wrapped immediately"},"returns":{"_rewardAmount":"       amount of total claimed rewards"}},"claimReward(address,uint256[])":{"details":"Reverts if `msg.sender` is delegating by amountClaims for all unclaimed reward epochs to the 'max(_rewardEpochs)'.Retained for backward compatibility.This function is deprecated - use `claim` instead.","params":{"_recipient":"address to transfer funds to","_rewardEpochs":"array of reward epoch numbers to claim for"},"returns":{"_rewardAmount":"       amount of total claimed rewards"}},"claimRewardFromDataProviders(address,uint256[],address[])":{"details":"Function can only be used for explicit delegations.This function is deprecated - use `claimFromDataProviders` instead.","params":{"_dataProviders":"array of addresses representing data providers to claim the reward from","_recipient":"address to transfer funds to","_rewardEpochs":"array of reward epoch numbers to claim for"},"returns":{"_rewardAmount":"       amount of total claimed rewards"}},"getClaimedReward(uint256,address,address)":{"params":{"_claimer":"address representing the claimer","_dataProvider":"address representing the data provider","_rewardEpoch":"reward epoch number"},"returns":{"_amount":"             number representing the claimed amount","_claimed":"            boolean indicating if reward has been claimed"}},"getDataProviderCurrentFeePercentage(address)":{"params":{"_dataProvider":"address representing data provider"}},"getDataProviderFeePercentage(address,uint256)":{"params":{"_dataProvider":"address representing data provider","_rewardEpoch":"reward epoch number"}},"getDataProviderPerformanceInfo(uint256,address)":{"params":{"_dataProvider":"address representing the data provider","_rewardEpoch":"reward epoch number"},"returns":{"_rewardAmount":"                   number representing the amount of rewards","_votePowerIgnoringRevocation":"    number representing the vote power ignoring revocations"}},"getDataProviderScheduledFeePercentageChanges(address)":{"params":{"_dataProvider":"address representing data provider"},"returns":{"_feePercentageBIPS":"  positional array of fee percentages in BIPS","_fixed":"              positional array of boolean values indicating if settings are subjected to change","_validFromEpoch":"     positional array of block numbers the fee settings are effective from"}},"getEpochReward(uint256)":{"params":{"_rewardEpoch":"reward epoch number"},"returns":{"_claimedReward":"      number representing the amount of total epoch reward that has been claimed","_totalReward":"        number representing the total epoch reward"}},"getEpochsWithClaimableRewards()":{"params":{"_endEpochId":"the newest epoch id that allows reward claiming","_startEpochId":"the oldest epoch id that allows reward claiming"}},"getEpochsWithUnclaimedRewards(address)":{"details":"Reverts when queried with `_beneficiary` delegating by amount","params":{"_beneficiary":"address of reward beneficiary"},"returns":{"_epochIds":"           array of epoch ids"}},"getRewardEpochToExpireNext()":{"returns":{"_0":"Reward epoch id that will expire next"}},"getRewardEpochVotePowerBlock(uint256)":{"params":{"_rewardEpoch":"reward epoch number"}},"getStateOfRewards(address,uint256)":{"details":"Reverts when queried with `_beneficiary` delegating by amount","params":{"_beneficiary":"address of reward beneficiary","_rewardEpoch":"reward epoch number"},"returns":{"_claimable":"          boolean value indicating if rewards are claimable","_claimed":"            positional array of boolean values indicating if reward is claimed","_dataProviders":"      positional array of addresses representing data providers","_rewardAmounts":"      positional array of reward amounts"}},"getStateOfRewardsFromDataProviders(address,uint256,address[])":{"params":{"_beneficiary":"address of reward beneficiary","_dataProviders":"positional array of addresses representing data providers","_rewardEpoch":"reward epoch number"},"returns":{"_claimable":"          boolean value indicating if rewards are claimable","_claimed":"            positional array of boolean values indicating if reward is claimed","_rewardAmounts":"      positional array of reward amounts"}},"nextClaimableRewardEpoch(address)":{"params":{"_rewardOwner":"address of the reward owner"}},"setDataProviderFeePercentage(uint256)":{"params":{"_feePercentageBIPS":"number representing fee percentage in BIPS"},"returns":{"_validFromEpoch":"     reward epoch number when the setting becomes effective."}}},"version":1},"userdoc":{"kind":"user","methods":{"active()":{"notice":"Allows reward claiming"},"autoClaim(address[],uint256)":{"notice":"Allows batch claiming for the list of '_rewardOwners' and for all unclaimed epochs <= '_rewardEpoch'.If reward owner has enabled delegation account, rewards are also claimed for that delegation account and   total claimed amount is sent to that delegation account, otherwise claimed amount is sent to owner's account.Claimed amount is automatically wrapped.Method can be used by reward owner or executor. If executor is registered with fee > 0,   then fee is paid to executor for each claimed address from the list."},"claim(address,address,uint256,bool)":{"notice":"Allows the sender to claim or wrap rewards for reward owner.This function is intended to be used to claim rewards in case of delegation by percentage.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`."},"claimFromDataProviders(address,address,uint256[],address[],bool)":{"notice":"Allows the sender to claim or wrap rewards for reward owner from specified data providers.This function is intended to be used to claim rewards in case of delegation by amount.The caller does not have to be the owner, but must be approved by the owner to claim on his behalf,   this approval is done by calling `setClaimExecutors`.It is actually safe for this to be called by anybody (nothing can be stolen), but by limiting who can   call, we allow the owner to control the timing of the calls.Reward owner can claim to any `_recipient`, while the executor can only claim to the reward owner,   reward owners's personal delegation account or one of the addresses set by `setAllowedClaimRecipients`."},"claimReward(address,uint256[])":{"notice":"Allows a percentage delegator to claim rewards.This function is intended to be used to claim rewards in case of delegation by percentage."},"claimRewardFromDataProviders(address,uint256[],address[])":{"notice":"Allows the sender to claim rewards from specified data providers.This function is intended to be used to claim rewards in case of delegation by amount."},"getClaimedReward(uint256,address,address)":{"notice":"Returns the information on claimed reward of `_dataProvider` for `_rewardEpoch` by `_claimer`"},"getCurrentRewardEpoch()":{"notice":"Return current reward epoch number"},"getDataProviderCurrentFeePercentage(address)":{"notice":"Returns the current fee percentage of `_dataProvider`"},"getDataProviderFeePercentage(address,uint256)":{"notice":"Returns the fee percentage of `_dataProvider` at `_rewardEpoch`"},"getDataProviderPerformanceInfo(uint256,address)":{"notice":"Returns the information on rewards and initial vote power of `_dataProvider` for `_rewardEpoch`"},"getDataProviderScheduledFeePercentageChanges(address)":{"notice":"Returns the scheduled fee percentage changes of `_dataProvider`"},"getEpochReward(uint256)":{"notice":"Returns information on epoch reward"},"getEpochsWithClaimableRewards()":{"notice":"Returns the start and the end of the reward epoch range for which the reward is claimable"},"getEpochsWithUnclaimedRewards(address)":{"notice":"Returns the array of claimable epoch ids for which the reward has not yet been claimed"},"getInitialRewardEpoch()":{"notice":"Return initial reward epoch number"},"getRewardEpochToExpireNext()":{"notice":"Return reward epoch that will expire, when new reward epoch will start"},"getRewardEpochVotePowerBlock(uint256)":{"notice":"Return reward epoch vote power block"},"getStateOfRewards(address,uint256)":{"notice":"Returns the state of rewards for `_beneficiary` at `_rewardEpoch`"},"getStateOfRewardsFromDataProviders(address,uint256,address[])":{"notice":"Returns the state of rewards for `_beneficiary` at `_rewardEpoch` from `_dataProviders`"},"nextClaimableRewardEpoch(address)":{"notice":"Returns the next claimable reward epoch for '_rewardOwner'."},"setDataProviderFeePercentage(uint256)":{"notice":"Allows data provider to set (or update last) fee percentage."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IFtsoRewardManager.sol":"IFtsoRewardManager"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IFtsoRewardManager.sol":{"keccak256":"0x03ea94df67caf6f0a31f2d24a08e4ecb3703d177ae181ecf3fd2ddd4d59ac102","urls":["bzz-raw://33ec71d0ecae0eef0274add901ed4432c1e564db7e2fd917364896eb2b4c78a0","dweb:/ipfs/QmRQTf37obE4yka96BFzENvz7hEnYXY6UATEfKvJUkYbwn"],"license":"MIT"}},"version":1},"id":24}