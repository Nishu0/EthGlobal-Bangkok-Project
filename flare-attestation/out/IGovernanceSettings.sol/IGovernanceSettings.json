{"abi":[{"type":"function","name":"getExecutors","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getGovernanceAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getTimelock","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isExecutor","inputs":[{"name":"_address","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getExecutors()":"ef09e78f","getGovernanceAddress()":"73252494","getTimelock()":"6221a54b","isExecutor(address)":"debfda30"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getExecutors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernanceAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimelock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isExecutor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getExecutors()\":{\"notice\":\"Get the addresses of the accounts that are allowed to execute the timelocked governance calls once the timelock period expires. Executors can be changed without a hardfork, via a normal governance call.\"},\"getGovernanceAddress()\":{\"notice\":\"Get the governance account address. The governance address can only be changed by a hardfork.\"},\"getTimelock()\":{\"notice\":\"Get the time in seconds that must pass between a governance call and execution. The timelock value can only be changed by a hardfork.\"},\"isExecutor(address)\":{\"notice\":\"Check whether an address is one of the executors.\"}},\"notice\":\"A special contract that holds Flare governance address. This contract enables updating governance address and timelock only by hard forking the network, meaning only by updating validator code.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IGovernanceSettings.sol\":\"IGovernanceSettings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IGovernanceSettings.sol\":{\"keccak256\":\"0xe8bbb796ce096af1077bbe3dad9bccb2e7ded0ce027abdde3dda3766f6981880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8291b0d9521629d768761577ae68e4ca0ebd08cb91b00bd7200a50732a039b75\",\"dweb:/ipfs/QmfMy57DxTQEABy1xeaMUvCrBPCTNH7M68k4NRyNZBw8G9\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getExecutors","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getGovernanceAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getTimelock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"stateMutability":"view","type":"function","name":"isExecutor","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"getExecutors()":{"notice":"Get the addresses of the accounts that are allowed to execute the timelocked governance calls once the timelock period expires. Executors can be changed without a hardfork, via a normal governance call."},"getGovernanceAddress()":{"notice":"Get the governance account address. The governance address can only be changed by a hardfork."},"getTimelock()":{"notice":"Get the time in seconds that must pass between a governance call and execution. The timelock value can only be changed by a hardfork."},"isExecutor(address)":{"notice":"Check whether an address is one of the executors."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IGovernanceSettings.sol":"IGovernanceSettings"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IGovernanceSettings.sol":{"keccak256":"0xe8bbb796ce096af1077bbe3dad9bccb2e7ded0ce027abdde3dda3766f6981880","urls":["bzz-raw://8291b0d9521629d768761577ae68e4ca0ebd08cb91b00bd7200a50732a039b75","dweb:/ipfs/QmfMy57DxTQEABy1xeaMUvCrBPCTNH7M68k4NRyNZBw8G9"],"license":"MIT"}},"version":1},"id":27}