{"abi":[{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"claimRewards","inputs":[{"name":"_projectIds","type":"uint256[]","internalType":"uint256[]"},{"name":"_month","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_claimedRewardsWei","type":"uint128","internalType":"uint128"}],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"distributeRewards","inputs":[{"name":"_projectId","type":"uint256","internalType":"uint256"},{"name":"_month","type":"uint256","internalType":"uint256"},{"name":"_recipients","type":"address[]","internalType":"address[]"},{"name":"_amountsWei","type":"uint128[]","internalType":"uint128[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"firstMonthStartTs","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBalancesOf","inputs":[{"name":"_owner","type":"address","internalType":"address"}],"outputs":[{"name":"_wNatBalance","type":"uint256","internalType":"uint256"},{"name":"_rNatBalance","type":"uint256","internalType":"uint256"},{"name":"_lockedBalance","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getClaimableRewards","inputs":[{"name":"_projectId","type":"uint256","internalType":"uint256"},{"name":"_owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getCurrentMonth","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getOwnerRewardsInfo","inputs":[{"name":"_projectId","type":"uint256","internalType":"uint256"},{"name":"_month","type":"uint256","internalType":"uint256"},{"name":"_owner","type":"address","internalType":"address"}],"outputs":[{"name":"_assignedRewards","type":"uint128","internalType":"uint128"},{"name":"_claimedRewards","type":"uint128","internalType":"uint128"},{"name":"_claimable","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getProjectInfo","inputs":[{"name":"_projectId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_name","type":"string","internalType":"string"},{"name":"_distributor","type":"address","internalType":"address"},{"name":"_currentMonthDistributionEnabled","type":"bool","internalType":"bool"},{"name":"_distributionDisabled","type":"bool","internalType":"bool"},{"name":"_claimingDisabled","type":"bool","internalType":"bool"},{"name":"_totalAssignedRewards","type":"uint128","internalType":"uint128"},{"name":"_totalDistributedRewards","type":"uint128","internalType":"uint128"},{"name":"_totalClaimedRewards","type":"uint128","internalType":"uint128"},{"name":"_totalUnassignedUnclaimedRewards","type":"uint128","internalType":"uint128"},{"name":"_monthsWithRewards","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"getProjectRewardsInfo","inputs":[{"name":"_projectId","type":"uint256","internalType":"uint256"},{"name":"_month","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_assignedRewards","type":"uint128","internalType":"uint128"},{"name":"_distributedRewards","type":"uint128","internalType":"uint128"},{"name":"_claimedRewards","type":"uint128","internalType":"uint128"},{"name":"_unassignedUnclaimedRewards","type":"uint128","internalType":"uint128"}],"stateMutability":"view"},{"type":"function","name":"getProjectsBasicInfo","inputs":[],"outputs":[{"name":"_names","type":"string[]","internalType":"string[]"},{"name":"_claimingDisabled","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"getProjectsCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRNatAccount","inputs":[{"name":"_owner","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"contract IRNatAccount"}],"stateMutability":"view"},{"type":"function","name":"getRewardsInfo","inputs":[],"outputs":[{"name":"_totalAssignableRewards","type":"uint256","internalType":"uint256"},{"name":"_totalAssignedRewards","type":"uint256","internalType":"uint256"},{"name":"_totalClaimedRewards","type":"uint256","internalType":"uint256"},{"name":"_totalWithdrawnRewards","type":"uint256","internalType":"uint256"},{"name":"_totalWithdrawnAssignableRewards","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"setClaimExecutors","inputs":[{"name":"_executors","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferExternalToken","inputs":[{"name":"_token","type":"address","internalType":"contract IERC20"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"wNat","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IWNat"}],"stateMutability":"view"},{"type":"function","name":"withdraw","inputs":[{"name":"_amount","type":"uint128","internalType":"uint128"},{"name":"_wrap","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawAll","inputs":[{"name":"_wrap","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"ClaimingPermissionUpdated","inputs":[{"name":"projectIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"disabled","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"DistributionPermissionUpdated","inputs":[{"name":"projectIds","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"disabled","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ProjectAdded","inputs":[{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"distributor","type":"address","indexed":false,"internalType":"address"},{"name":"currentMonthDistributionEnabled","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"ProjectUpdated","inputs":[{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"name","type":"string","indexed":false,"internalType":"string"},{"name":"distributor","type":"address","indexed":false,"internalType":"address"},{"name":"currentMonthDistributionEnabled","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"RNatAccountCreated","inputs":[{"name":"owner","type":"address","indexed":false,"internalType":"address"},{"name":"rNatAccount","type":"address","indexed":false,"internalType":"contract IRNatAccount"}],"anonymous":false},{"type":"event","name":"RewardsAssigned","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"month","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"RewardsClaimed","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"month","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"amount","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"RewardsDistributed","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"month","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"recipients","type":"address[]","indexed":false,"internalType":"address[]"},{"name":"amounts","type":"uint128[]","indexed":false,"internalType":"uint128[]"}],"anonymous":false},{"type":"event","name":"RewardsUnassigned","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"month","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"UnassignedRewardsWithdrawn","inputs":[{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false},{"type":"event","name":"UnclaimedRewardsUnassigned","inputs":[{"name":"projectId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"month","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"amount","type":"uint128","indexed":false,"internalType":"uint128"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claimRewards(uint256[],uint256)":"0f1d1e31","decimals()":"313ce567","distributeRewards(uint256,uint256,address[],uint128[])":"2dc57334","firstMonthStartTs()":"68e79c6f","getBalancesOf(address)":"d6ab3b7f","getClaimableRewards(uint256,address)":"ab60df90","getCurrentMonth()":"ddd1b67e","getOwnerRewardsInfo(uint256,uint256,address)":"36116ad5","getProjectInfo(uint256)":"fabf5968","getProjectRewardsInfo(uint256,uint256)":"d808f743","getProjectsBasicInfo()":"d7dd16ff","getProjectsCount()":"e4a8f18b","getRNatAccount(address)":"3bd4fbc6","getRewardsInfo()":"ad523fe1","name()":"06fdde03","setClaimExecutors(address[])":"9119c494","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferExternalToken(address,uint256)":"489a8a47","transferFrom(address,address,uint256)":"23b872dd","wNat()":"9edbf007","withdraw(uint128,bool)":"a50d5f3d","withdrawAll(bool)":"1c1c6fe5"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"projectIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"name\":\"ClaimingPermissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"projectIds\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disabled\",\"type\":\"bool\"}],\"name\":\"DistributionPermissionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"currentMonthDistributionEnabled\",\"type\":\"bool\"}],\"name\":\"ProjectAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"distributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"currentMonthDistributionEnabled\",\"type\":\"bool\"}],\"name\":\"ProjectUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IRNatAccount\",\"name\":\"rNatAccount\",\"type\":\"address\"}],\"name\":\"RNatAccountCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RewardsAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint128[]\",\"name\":\"amounts\",\"type\":\"uint128[]\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"RewardsUnassigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"UnassignedRewardsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"month\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"UnclaimedRewardsUnassigned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_projectIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"claimRewards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_claimedRewardsWei\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint128[]\",\"name\":\"_amountsWei\",\"type\":\"uint128[]\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"firstMonthStartTs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getBalancesOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_wNatBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rNatBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockedBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getClaimableRewards\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentMonth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getOwnerRewardsInfo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_assignedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_claimedRewards\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"_claimable\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"}],\"name\":\"getProjectInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_distributor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_currentMonthDistributionEnabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_distributionDisabled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_claimingDisabled\",\"type\":\"bool\"},{\"internalType\":\"uint128\",\"name\":\"_totalAssignedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalDistributedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalClaimedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_totalUnassignedUnclaimedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint256[]\",\"name\":\"_monthsWithRewards\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_month\",\"type\":\"uint256\"}],\"name\":\"getProjectRewardsInfo\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_assignedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_distributedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_claimedRewards\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"_unassignedUnclaimedRewards\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectsBasicInfo\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"_names\",\"type\":\"string[]\"},{\"internalType\":\"bool[]\",\"name\":\"_claimingDisabled\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getRNatAccount\",\"outputs\":[{\"internalType\":\"contract IRNatAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardsInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalAssignableRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalAssignedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalClaimedRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalWithdrawnRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalWithdrawnAssignableRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_executors\",\"type\":\"address[]\"}],\"name\":\"setClaimExecutors\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferExternalToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wNat\",\"outputs\":[{\"internalType\":\"contract IWNat\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"_amount\",\"type\":\"uint128\"},{\"internalType\":\"bool\",\"name\":\"_wrap\",\"type\":\"bool\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_wrap\",\"type\":\"bool\"}],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"claimRewards(uint256[],uint256)\":{\"params\":{\"_month\":\"The month up to which (including) rewards will be claimed.\",\"_projectIds\":\"The ids of the projects.\"},\"returns\":{\"_claimedRewardsWei\":\"The total amount of rewards claimed (in wei).\"}},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"distributeRewards(uint256,uint256,address[],uint128[])\":{\"params\":{\"_amountsWei\":\"The amounts of rewards to distribute to each recipient (in wei).\",\"_month\":\"The month of the rewards.\",\"_projectId\":\"The id of the project.\",\"_recipients\":\"The addresses of the recipients.\"}},\"getBalancesOf(address)\":{\"params\":{\"_owner\":\"The address of the owner.\"},\"returns\":{\"_lockedBalance\":\"The locked/vested balance (in wei).\",\"_rNatBalance\":\"The balance of `RNat` (in wei).\",\"_wNatBalance\":\"The balance of `WNat` (in wei).\"}},\"getClaimableRewards(uint256,address)\":{\"params\":{\"_owner\":\"The address of the owner.\",\"_projectId\":\"The id of the project.\"},\"returns\":{\"_0\":\"The amount of rewards claimable by the owner (in wei).\"}},\"getCurrentMonth()\":{\"returns\":{\"_0\":\"The current month.\"}},\"getOwnerRewardsInfo(uint256,uint256,address)\":{\"params\":{\"_month\":\"The month of the rewards.\",\"_owner\":\"The address of the owner.\",\"_projectId\":\"The id of the project.\"},\"returns\":{\"_assignedRewards\":\"The amount of rewards assigned to the owner for the month (in wei).\",\"_claimable\":\"Whether the rewards are claimable by the owner.\",\"_claimedRewards\":\"The amount of rewards claimed by the owner for the month (in wei).\"}},\"getProjectInfo(uint256)\":{\"params\":{\"_projectId\":\"The id of the project.\"},\"returns\":{\"_claimingDisabled\":\"Whether claiming is disabled.\",\"_currentMonthDistributionEnabled\":\"Whether distribution is enabled for the current month.\",\"_distributionDisabled\":\"Whether distribution is disabled.\",\"_distributor\":\"The address of the distributor.\",\"_monthsWithRewards\":\"The months with rewards.\",\"_name\":\"The name of the project.\",\"_totalAssignedRewards\":\"The total amount of rewards assigned to the project (in wei).\",\"_totalClaimedRewards\":\"The total amount of rewards claimed from the project (in wei).\",\"_totalDistributedRewards\":\"The total amount of rewards distributed by the project (in wei).\",\"_totalUnassignedUnclaimedRewards\":\"The total amount of unassigned unclaimed rewards (in wei).\"}},\"getProjectRewardsInfo(uint256,uint256)\":{\"params\":{\"_month\":\"The month of the rewards.\",\"_projectId\":\"The id of the project.\"},\"returns\":{\"_assignedRewards\":\"The amount of rewards assigned to the project for the month (in wei).\",\"_claimedRewards\":\"The amount of rewards claimed from the project for the month (in wei).\",\"_distributedRewards\":\"The amount of rewards distributed by the project for the month (in wei).\",\"_unassignedUnclaimedRewards\":\"The amount of unassigned unclaimed rewards for the month (in wei).\"}},\"getProjectsBasicInfo()\":{\"returns\":{\"_claimingDisabled\":\"Whether claiming is disabled for each project.\",\"_names\":\"The names of the projects.\"}},\"getProjectsCount()\":{\"returns\":{\"_0\":\"The total number of projects.\"}},\"getRNatAccount(address)\":{\"params\":{\"_owner\":\"Account to query.\"},\"returns\":{\"_0\":\"Address of its RNat account.\"}},\"getRewardsInfo()\":{\"returns\":{\"_totalAssignableRewards\":\"The total amount of assignable rewards (in wei).\",\"_totalAssignedRewards\":\"The total amount of assigned rewards (in wei).\",\"_totalClaimedRewards\":\"The total amount of claimed rewards (in wei).\",\"_totalWithdrawnAssignableRewards\":\"The total amount of withdrawn once assignable rewards (in wei).\",\"_totalWithdrawnRewards\":\"The total amount of withdrawn rewards (in wei).\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"setClaimExecutors(address[])\":{\"params\":{\"_executors\":\"The new executors. All old executors will be deleted and replaced by these.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferExternalToken(address,uint256)\":{\"params\":{\"_amount\":\"Amount of tokens to transfer.\",\"_token\":\"Target token contract address.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"withdraw(uint128,bool)\":{\"params\":{\"_amount\":\"Amount of tokens to transfer (in wei).\",\"_wrap\":\"If `true`, the tokens will be sent wrapped in `WNat`. If `false`, they will be sent as `Nat`.\"}},\"withdrawAll(bool)\":{\"params\":{\"_wrap\":\"If `true`, the tokens will be sent wrapped in `WNat`. If `false`, they will be sent as `Nat`.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimRewards(uint256[],uint256)\":{\"notice\":\"Claim rewards for a list of projects up to the given month.\"},\"distributeRewards(uint256,uint256,address[],uint128[])\":{\"notice\":\"Distributes the rewards of a project for a given month to a list of recipients. It must be called by the project's distributor. It can only be called for the last or current month (if enabled).\"},\"firstMonthStartTs()\":{\"notice\":\"Returns the timestamp of the start of the first month.\"},\"getBalancesOf(address)\":{\"notice\":\"Gets owner's balances of `WNat`, `RNat` and locked tokens.\"},\"getClaimableRewards(uint256,address)\":{\"notice\":\"Gets the claimable rewards of a project for a given owner.\"},\"getCurrentMonth()\":{\"notice\":\"Gets the current month.\"},\"getOwnerRewardsInfo(uint256,uint256,address)\":{\"notice\":\"Gets the rewards information of a project for a given month and owner.\"},\"getProjectInfo(uint256)\":{\"notice\":\"Gets the information of a project.\"},\"getProjectRewardsInfo(uint256,uint256)\":{\"notice\":\"Gets the rewards information of a project for a given month.\"},\"getProjectsBasicInfo()\":{\"notice\":\"Gets the basic information of all projects.\"},\"getProjectsCount()\":{\"notice\":\"Gets the total number of projects.\"},\"getRNatAccount(address)\":{\"notice\":\"Gets owner's RNat account. If it doesn't exist it reverts.\"},\"getRewardsInfo()\":{\"notice\":\"Gets totals rewards information.\"},\"setClaimExecutors(address[])\":{\"notice\":\"Sets the addresses of executors and adds the owner as an executor. If any of the executors is a registered executor, some fee needs to be paid.\"},\"transferExternalToken(address,uint256)\":{\"notice\":\"Allows the caller to transfer ERC-20 tokens from their RNat account to the owner account. The main use case is to move ERC-20 tokes received by mistake (by an airdrop, for example) out of the RNat account and move them into the main account, where they can be more easily managed. Reverts if the target token is the `WNat` contract: use method `withdraw` or `withdrawAll` for that.\"},\"wNat()\":{\"notice\":\"Returns the `WNat` contract.\"},\"withdraw(uint128,bool)\":{\"notice\":\"Allows the caller to withdraw `WNat` wrapped tokens from their RNat account to the owner account. In case there are some self-destruct native tokens left on the contract, they can be transferred to the owner account using this method and `_wrap = false`.\"},\"withdrawAll(bool)\":{\"notice\":\"Allows the caller to withdraw `WNat` wrapped tokens from their RNat account to the owner account. If some tokens are still locked, only 50% of them will be withdrawn, the rest will be burned as a penalty. In case there are some self-destruct native tokens left on the contract, they can be transferred to the owner account using this method and `_wrap = false`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IRNat.sol\":\"IRNat\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IGovernanceVotePower.sol\":{\"keccak256\":\"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132\",\"dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA\"]},\"lib/flare-periphery-contracts/coston2/IRNat.sol\":{\"keccak256\":\"0xedcf9a59299c5c7a8076af3851908864ce738a6fd2fb2aafbc512b613014bf45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a649ef736820f9c93c1b5506334dfbe9a7d373b334c5925c867ac836bd36196\",\"dweb:/ipfs/QmTxj892WYhvDDZCvioGtSA2yvgvryhBMNFDGzTB4XeRMi\"]},\"lib/flare-periphery-contracts/coston2/IRNatAccount.sol\":{\"keccak256\":\"0xcf897fa960f27fc8afd65be6c31b72bed16afd7c27d38d7d0d3ef3eeb3785faf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c501f1488be8fac4521784378cd578c55e735c0d0140152fb4acade94d8e15d3\",\"dweb:/ipfs/QmPpsrtEMPa3YaPXQomAA8DAJcT647dkgeTi7wNhYkNhRv\"]},\"lib/flare-periphery-contracts/coston2/IVPContractEvents.sol\":{\"keccak256\":\"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7\",\"dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9\"]},\"lib/flare-periphery-contracts/coston2/IVPToken.sol\":{\"keccak256\":\"0xa8755907f367ef19f960759730e3c17fa95b18ee01e38b98c82071805af21f2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8526ec06e70f60a2e243bbb5808b63ff7dfb60f407297e70d4df33682bbdf92\",\"dweb:/ipfs/QmQyTcxXAAbHdNdkxPgNcCHXqrtTSFVzUBy5ayQdCXTehf\"]},\"lib/flare-periphery-contracts/coston2/IWNat.sol\":{\"keccak256\":\"0xed51c1c6b3a3f9f2390709583e70e7aaa4b4e32cf4a48bc7203d75fa9c755d2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0064f7db274dad8c18a1d9f5aea392dfb433e986d66b873e09d47a41afd68387\",\"dweb:/ipfs/QmeRaCKKqESD9XLFJAEtrjpKYQScnHH899AkNNnNUbVMqx\"]},\"lib/flare-periphery-contracts/coston2/token/interface/IICleanable.sol\":{\"keccak256\":\"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6\",\"dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"uint256[]","name":"projectIds","type":"uint256[]","indexed":false},{"internalType":"bool","name":"disabled","type":"bool","indexed":false}],"type":"event","name":"ClaimingPermissionUpdated","anonymous":false},{"inputs":[{"internalType":"uint256[]","name":"projectIds","type":"uint256[]","indexed":false},{"internalType":"bool","name":"disabled","type":"bool","indexed":false}],"type":"event","name":"DistributionPermissionUpdated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address","name":"distributor","type":"address","indexed":false},{"internalType":"bool","name":"currentMonthDistributionEnabled","type":"bool","indexed":false}],"type":"event","name":"ProjectAdded","anonymous":false},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256","indexed":true},{"internalType":"string","name":"name","type":"string","indexed":false},{"internalType":"address","name":"distributor","type":"address","indexed":false},{"internalType":"bool","name":"currentMonthDistributionEnabled","type":"bool","indexed":false}],"type":"event","name":"ProjectUpdated","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":false},{"internalType":"contract IRNatAccount","name":"rNatAccount","type":"address","indexed":false}],"type":"event","name":"RNatAccountCreated","anonymous":false},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":true},{"internalType":"uint128","name":"amount","type":"uint128","indexed":false}],"type":"event","name":"RewardsAssigned","anonymous":false},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":true},{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"uint128","name":"amount","type":"uint128","indexed":false}],"type":"event","name":"RewardsClaimed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":true},{"internalType":"address[]","name":"recipients","type":"address[]","indexed":false},{"internalType":"uint128[]","name":"amounts","type":"uint128[]","indexed":false}],"type":"event","name":"RewardsDistributed","anonymous":false},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":true},{"internalType":"uint128","name":"amount","type":"uint128","indexed":false}],"type":"event","name":"RewardsUnassigned","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"uint128","name":"amount","type":"uint128","indexed":false}],"type":"event","name":"UnassignedRewardsWithdrawn","anonymous":false},{"inputs":[{"internalType":"uint256","name":"projectId","type":"uint256","indexed":true},{"internalType":"uint256","name":"month","type":"uint256","indexed":true},{"internalType":"uint128","name":"amount","type":"uint128","indexed":false}],"type":"event","name":"UnclaimedRewardsUnassigned","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256[]","name":"_projectIds","type":"uint256[]"},{"internalType":"uint256","name":"_month","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"claimRewards","outputs":[{"internalType":"uint128","name":"_claimedRewardsWei","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"},{"internalType":"uint256","name":"_month","type":"uint256"},{"internalType":"address[]","name":"_recipients","type":"address[]"},{"internalType":"uint128[]","name":"_amountsWei","type":"uint128[]"}],"stateMutability":"nonpayable","type":"function","name":"distributeRewards"},{"inputs":[],"stateMutability":"view","type":"function","name":"firstMonthStartTs","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function","name":"getBalancesOf","outputs":[{"internalType":"uint256","name":"_wNatBalance","type":"uint256"},{"internalType":"uint256","name":"_rNatBalance","type":"uint256"},{"internalType":"uint256","name":"_lockedBalance","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function","name":"getClaimableRewards","outputs":[{"internalType":"uint128","name":"","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentMonth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"},{"internalType":"uint256","name":"_month","type":"uint256"},{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function","name":"getOwnerRewardsInfo","outputs":[{"internalType":"uint128","name":"_assignedRewards","type":"uint128"},{"internalType":"uint128","name":"_claimedRewards","type":"uint128"},{"internalType":"bool","name":"_claimable","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getProjectInfo","outputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"address","name":"_distributor","type":"address"},{"internalType":"bool","name":"_currentMonthDistributionEnabled","type":"bool"},{"internalType":"bool","name":"_distributionDisabled","type":"bool"},{"internalType":"bool","name":"_claimingDisabled","type":"bool"},{"internalType":"uint128","name":"_totalAssignedRewards","type":"uint128"},{"internalType":"uint128","name":"_totalDistributedRewards","type":"uint128"},{"internalType":"uint128","name":"_totalClaimedRewards","type":"uint128"},{"internalType":"uint128","name":"_totalUnassignedUnclaimedRewards","type":"uint128"},{"internalType":"uint256[]","name":"_monthsWithRewards","type":"uint256[]"}]},{"inputs":[{"internalType":"uint256","name":"_projectId","type":"uint256"},{"internalType":"uint256","name":"_month","type":"uint256"}],"stateMutability":"view","type":"function","name":"getProjectRewardsInfo","outputs":[{"internalType":"uint128","name":"_assignedRewards","type":"uint128"},{"internalType":"uint128","name":"_distributedRewards","type":"uint128"},{"internalType":"uint128","name":"_claimedRewards","type":"uint128"},{"internalType":"uint128","name":"_unassignedUnclaimedRewards","type":"uint128"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProjectsBasicInfo","outputs":[{"internalType":"string[]","name":"_names","type":"string[]"},{"internalType":"bool[]","name":"_claimingDisabled","type":"bool[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getProjectsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"stateMutability":"view","type":"function","name":"getRNatAccount","outputs":[{"internalType":"contract IRNatAccount","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getRewardsInfo","outputs":[{"internalType":"uint256","name":"_totalAssignableRewards","type":"uint256"},{"internalType":"uint256","name":"_totalAssignedRewards","type":"uint256"},{"internalType":"uint256","name":"_totalClaimedRewards","type":"uint256"},{"internalType":"uint256","name":"_totalWithdrawnRewards","type":"uint256"},{"internalType":"uint256","name":"_totalWithdrawnAssignableRewards","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address[]","name":"_executors","type":"address[]"}],"stateMutability":"payable","type":"function","name":"setClaimExecutors"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"contract IERC20","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferExternalToken"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"wNat","outputs":[{"internalType":"contract IWNat","name":"","type":"address"}]},{"inputs":[{"internalType":"uint128","name":"_amount","type":"uint128"},{"internalType":"bool","name":"_wrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"withdraw"},{"inputs":[{"internalType":"bool","name":"_wrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"withdrawAll"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"claimRewards(uint256[],uint256)":{"params":{"_month":"The month up to which (including) rewards will be claimed.","_projectIds":"The ids of the projects."},"returns":{"_claimedRewardsWei":"The total amount of rewards claimed (in wei)."}},"decimals()":{"details":"Returns the decimals places of the token."},"distributeRewards(uint256,uint256,address[],uint128[])":{"params":{"_amountsWei":"The amounts of rewards to distribute to each recipient (in wei).","_month":"The month of the rewards.","_projectId":"The id of the project.","_recipients":"The addresses of the recipients."}},"getBalancesOf(address)":{"params":{"_owner":"The address of the owner."},"returns":{"_lockedBalance":"The locked/vested balance (in wei).","_rNatBalance":"The balance of `RNat` (in wei).","_wNatBalance":"The balance of `WNat` (in wei)."}},"getClaimableRewards(uint256,address)":{"params":{"_owner":"The address of the owner.","_projectId":"The id of the project."},"returns":{"_0":"The amount of rewards claimable by the owner (in wei)."}},"getCurrentMonth()":{"returns":{"_0":"The current month."}},"getOwnerRewardsInfo(uint256,uint256,address)":{"params":{"_month":"The month of the rewards.","_owner":"The address of the owner.","_projectId":"The id of the project."},"returns":{"_assignedRewards":"The amount of rewards assigned to the owner for the month (in wei).","_claimable":"Whether the rewards are claimable by the owner.","_claimedRewards":"The amount of rewards claimed by the owner for the month (in wei)."}},"getProjectInfo(uint256)":{"params":{"_projectId":"The id of the project."},"returns":{"_claimingDisabled":"Whether claiming is disabled.","_currentMonthDistributionEnabled":"Whether distribution is enabled for the current month.","_distributionDisabled":"Whether distribution is disabled.","_distributor":"The address of the distributor.","_monthsWithRewards":"The months with rewards.","_name":"The name of the project.","_totalAssignedRewards":"The total amount of rewards assigned to the project (in wei).","_totalClaimedRewards":"The total amount of rewards claimed from the project (in wei).","_totalDistributedRewards":"The total amount of rewards distributed by the project (in wei).","_totalUnassignedUnclaimedRewards":"The total amount of unassigned unclaimed rewards (in wei)."}},"getProjectRewardsInfo(uint256,uint256)":{"params":{"_month":"The month of the rewards.","_projectId":"The id of the project."},"returns":{"_assignedRewards":"The amount of rewards assigned to the project for the month (in wei).","_claimedRewards":"The amount of rewards claimed from the project for the month (in wei).","_distributedRewards":"The amount of rewards distributed by the project for the month (in wei).","_unassignedUnclaimedRewards":"The amount of unassigned unclaimed rewards for the month (in wei)."}},"getProjectsBasicInfo()":{"returns":{"_claimingDisabled":"Whether claiming is disabled for each project.","_names":"The names of the projects."}},"getProjectsCount()":{"returns":{"_0":"The total number of projects."}},"getRNatAccount(address)":{"params":{"_owner":"Account to query."},"returns":{"_0":"Address of its RNat account."}},"getRewardsInfo()":{"returns":{"_totalAssignableRewards":"The total amount of assignable rewards (in wei).","_totalAssignedRewards":"The total amount of assigned rewards (in wei).","_totalClaimedRewards":"The total amount of claimed rewards (in wei).","_totalWithdrawnAssignableRewards":"The total amount of withdrawn once assignable rewards (in wei).","_totalWithdrawnRewards":"The total amount of withdrawn rewards (in wei)."}},"name()":{"details":"Returns the name of the token."},"setClaimExecutors(address[])":{"params":{"_executors":"The new executors. All old executors will be deleted and replaced by these."}},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferExternalToken(address,uint256)":{"params":{"_amount":"Amount of tokens to transfer.","_token":"Target token contract address."}},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"withdraw(uint128,bool)":{"params":{"_amount":"Amount of tokens to transfer (in wei).","_wrap":"If `true`, the tokens will be sent wrapped in `WNat`. If `false`, they will be sent as `Nat`."}},"withdrawAll(bool)":{"params":{"_wrap":"If `true`, the tokens will be sent wrapped in `WNat`. If `false`, they will be sent as `Nat`."}}},"version":1},"userdoc":{"kind":"user","methods":{"claimRewards(uint256[],uint256)":{"notice":"Claim rewards for a list of projects up to the given month."},"distributeRewards(uint256,uint256,address[],uint128[])":{"notice":"Distributes the rewards of a project for a given month to a list of recipients. It must be called by the project's distributor. It can only be called for the last or current month (if enabled)."},"firstMonthStartTs()":{"notice":"Returns the timestamp of the start of the first month."},"getBalancesOf(address)":{"notice":"Gets owner's balances of `WNat`, `RNat` and locked tokens."},"getClaimableRewards(uint256,address)":{"notice":"Gets the claimable rewards of a project for a given owner."},"getCurrentMonth()":{"notice":"Gets the current month."},"getOwnerRewardsInfo(uint256,uint256,address)":{"notice":"Gets the rewards information of a project for a given month and owner."},"getProjectInfo(uint256)":{"notice":"Gets the information of a project."},"getProjectRewardsInfo(uint256,uint256)":{"notice":"Gets the rewards information of a project for a given month."},"getProjectsBasicInfo()":{"notice":"Gets the basic information of all projects."},"getProjectsCount()":{"notice":"Gets the total number of projects."},"getRNatAccount(address)":{"notice":"Gets owner's RNat account. If it doesn't exist it reverts."},"getRewardsInfo()":{"notice":"Gets totals rewards information."},"setClaimExecutors(address[])":{"notice":"Sets the addresses of executors and adds the owner as an executor. If any of the executors is a registered executor, some fee needs to be paid."},"transferExternalToken(address,uint256)":{"notice":"Allows the caller to transfer ERC-20 tokens from their RNat account to the owner account. The main use case is to move ERC-20 tokes received by mistake (by an airdrop, for example) out of the RNat account and move them into the main account, where they can be more easily managed. Reverts if the target token is the `WNat` contract: use method `withdraw` or `withdrawAll` for that."},"wNat()":{"notice":"Returns the `WNat` contract."},"withdraw(uint128,bool)":{"notice":"Allows the caller to withdraw `WNat` wrapped tokens from their RNat account to the owner account. In case there are some self-destruct native tokens left on the contract, they can be transferred to the owner account using this method and `_wrap = false`."},"withdrawAll(bool)":{"notice":"Allows the caller to withdraw `WNat` wrapped tokens from their RNat account to the owner account. If some tokens are still locked, only 50% of them will be withdrawn, the rest will be burned as a penalty. In case there are some self-destruct native tokens left on the contract, they can be transferred to the owner account using this method and `_wrap = false`."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IRNat.sol":"IRNat"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IGovernanceVotePower.sol":{"keccak256":"0xac45cb04eedb4f19533df4867eb6cd50874a55ef04d73f4d2dc3d3b7d3927e3c","urls":["bzz-raw://12c190c019723041417c6f06c932a0719b837023d4fb42090d4bb6f820331132","dweb:/ipfs/QmfAsGCz2FgYvearhCHLqJHkd4MMiSpZ8JkUUY5hNBU2oA"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/IRNat.sol":{"keccak256":"0xedcf9a59299c5c7a8076af3851908864ce738a6fd2fb2aafbc512b613014bf45","urls":["bzz-raw://2a649ef736820f9c93c1b5506334dfbe9a7d373b334c5925c867ac836bd36196","dweb:/ipfs/QmTxj892WYhvDDZCvioGtSA2yvgvryhBMNFDGzTB4XeRMi"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/IRNatAccount.sol":{"keccak256":"0xcf897fa960f27fc8afd65be6c31b72bed16afd7c27d38d7d0d3ef3eeb3785faf","urls":["bzz-raw://c501f1488be8fac4521784378cd578c55e735c0d0140152fb4acade94d8e15d3","dweb:/ipfs/QmPpsrtEMPa3YaPXQomAA8DAJcT647dkgeTi7wNhYkNhRv"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/IVPContractEvents.sol":{"keccak256":"0x651a2ff1d5c179b87259f564d02877ae496b236bd48f4813a4d815c25e2407cf","urls":["bzz-raw://b68d9f9bfeeffa03a6d3f6c14a2633759f3739486e06e3daf03be60c6f9bbce7","dweb:/ipfs/QmWJrZF5UYPXQaSKVeP4iJUZj4jhDqmmMopxU8K3KdvJe9"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/IVPToken.sol":{"keccak256":"0xa8755907f367ef19f960759730e3c17fa95b18ee01e38b98c82071805af21f2e","urls":["bzz-raw://b8526ec06e70f60a2e243bbb5808b63ff7dfb60f407297e70d4df33682bbdf92","dweb:/ipfs/QmQyTcxXAAbHdNdkxPgNcCHXqrtTSFVzUBy5ayQdCXTehf"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/IWNat.sol":{"keccak256":"0xed51c1c6b3a3f9f2390709583e70e7aaa4b4e32cf4a48bc7203d75fa9c755d2a","urls":["bzz-raw://0064f7db274dad8c18a1d9f5aea392dfb433e986d66b873e09d47a41afd68387","dweb:/ipfs/QmeRaCKKqESD9XLFJAEtrjpKYQScnHH899AkNNnNUbVMqx"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/token/interface/IICleanable.sol":{"keccak256":"0x3ccc1532d642c3feff5b282a7c8901e2582844c1559acd1bd671afcb3aabaaef","urls":["bzz-raw://2ff8edad3b7387bd54dbfa4975b51601d9a020fd1fb7baf1a9ce98888ff3cab6","dweb:/ipfs/QmdsSTUMZmkc898q5LqWFt3M3gy9yrbqReMJes78WngJc7"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305","urls":["bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5","dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"],"license":"MIT"}},"version":1},"id":36}