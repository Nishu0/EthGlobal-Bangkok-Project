{"abi":[{"type":"function","name":"getCurrentRandom","inputs":[],"outputs":[{"name":"_randomNumber","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCurrentRandomWithQuality","inputs":[],"outputs":[{"name":"_randomNumber","type":"uint256","internalType":"uint256"},{"name":"_isSecureRandom","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"getCurrentRandomWithQualityAndTimestamp","inputs":[],"outputs":[{"name":"_randomNumber","type":"uint256","internalType":"uint256"},{"name":"_isSecureRandom","type":"bool","internalType":"bool"},{"name":"_randomTimestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"submit1","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"submit2","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"submit3","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"submitAndPass","inputs":[{"name":"_data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"submitSignatures","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"event","name":"NewVotingRoundInitiated","inputs":[],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getCurrentRandom()":"d89601fd","getCurrentRandomWithQuality()":"a978fb6b","getCurrentRandomWithQualityAndTimestamp()":"af9fbc3e","submit1()":"6c532fae","submit2()":"9d00c9fd","submit3()":"e1b157e7","submitAndPass(bytes)":"833bf6c0","submitSignatures()":"57eed580"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"NewVotingRoundInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getCurrentRandom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRandomWithQuality\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSecureRandom\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRandomWithQualityAndTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSecureRandom\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_randomTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit2\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submit3\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitAndPass\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"submitSignatures\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCurrentRandom()\":{\"returns\":{\"_randomNumber\":\"Current random number.\"}},\"getCurrentRandomWithQuality()\":{\"returns\":{\"_isSecureRandom\":\"Indicates if current random number is secure.\",\"_randomNumber\":\"Current random number.\"}},\"getCurrentRandomWithQualityAndTimestamp()\":{\"returns\":{\"_isSecureRandom\":\"Indicates if current random number is secure.\",\"_randomNumber\":\"Current random number.\",\"_randomTimestamp\":\"Random timestamp.\"}},\"submitAndPass(bytes)\":{\"params\":{\"_data\":\"The data to pass to the submitAndPassContract.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NewVotingRoundInitiated()\":{\"notice\":\"Event emitted when a new voting round is initiated.\"}},\"kind\":\"user\",\"methods\":{\"getCurrentRandom()\":{\"notice\":\"Returns current random number. Method reverts if random number was not generated securely.\"},\"getCurrentRandomWithQuality()\":{\"notice\":\"Returns current random number and a flag indicating if it was securely generated. It is up to the caller to decide whether to use the returned random number or not.\"},\"getCurrentRandomWithQualityAndTimestamp()\":{\"notice\":\"Returns current random number, a flag indicating if it was securely generated and its timestamp. It is up to the caller to decide whether to use the returned random number or not.\"},\"submit1()\":{\"notice\":\"Submit1 method. Used in multiple protocols (i.e. as FTSO commit method).\"},\"submit2()\":{\"notice\":\"Submit2 method. Used in multiple protocols (i.e. as FTSO reveal method).\"},\"submit3()\":{\"notice\":\"Submit3 method. Future usage.\"},\"submitAndPass(bytes)\":{\"notice\":\"SubmitAndPass method. Future usage.\"},\"submitSignatures()\":{\"notice\":\"SubmitSignatures method. Used in multiple protocols (i.e. as FTSO submit signature method).\"}},\"notice\":\"Submission interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/ISubmission.sol\":\"ISubmission\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IRandomProvider.sol\":{\"keccak256\":\"0x1dc9b6fbeb006270a1cc1a7503f50bcb81e113f3d8d441b820bdac02a9f4c8bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee727c336a95380ebac15e0c437faf5582a7bb6514a264b1e4ad353793dd438b\",\"dweb:/ipfs/QmRqPc7Srq1Cog72Lip1AtFKFCRBpMsLq3ck33hFa4tQ4G\"]},\"lib/flare-periphery-contracts/coston2/ISubmission.sol\":{\"keccak256\":\"0x86781d53b5fbecedad353ccfad5c6fe9485626e2454dd888f8973a1bd7dc66a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://484478ce4d014b731e4d4752602a421a456982dbe71a4e3e1a38215893213e7c\",\"dweb:/ipfs/QmXAEP12jaCF2eSvfCU99iJgCjJruxcSaLCDgAg5sU84Wq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"event","name":"NewVotingRoundInitiated","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentRandom","outputs":[{"internalType":"uint256","name":"_randomNumber","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentRandomWithQuality","outputs":[{"internalType":"uint256","name":"_randomNumber","type":"uint256"},{"internalType":"bool","name":"_isSecureRandom","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getCurrentRandomWithQualityAndTimestamp","outputs":[{"internalType":"uint256","name":"_randomNumber","type":"uint256"},{"internalType":"bool","name":"_isSecureRandom","type":"bool"},{"internalType":"uint256","name":"_randomTimestamp","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"submit1","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"submit2","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"submit3","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"submitAndPass","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"submitSignatures","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"getCurrentRandom()":{"returns":{"_randomNumber":"Current random number."}},"getCurrentRandomWithQuality()":{"returns":{"_isSecureRandom":"Indicates if current random number is secure.","_randomNumber":"Current random number."}},"getCurrentRandomWithQualityAndTimestamp()":{"returns":{"_isSecureRandom":"Indicates if current random number is secure.","_randomNumber":"Current random number.","_randomTimestamp":"Random timestamp."}},"submitAndPass(bytes)":{"params":{"_data":"The data to pass to the submitAndPassContract."}}},"version":1},"userdoc":{"kind":"user","methods":{"getCurrentRandom()":{"notice":"Returns current random number. Method reverts if random number was not generated securely."},"getCurrentRandomWithQuality()":{"notice":"Returns current random number and a flag indicating if it was securely generated. It is up to the caller to decide whether to use the returned random number or not."},"getCurrentRandomWithQualityAndTimestamp()":{"notice":"Returns current random number, a flag indicating if it was securely generated and its timestamp. It is up to the caller to decide whether to use the returned random number or not."},"submit1()":{"notice":"Submit1 method. Used in multiple protocols (i.e. as FTSO commit method)."},"submit2()":{"notice":"Submit2 method. Used in multiple protocols (i.e. as FTSO reveal method)."},"submit3()":{"notice":"Submit3 method. Future usage."},"submitAndPass(bytes)":{"notice":"SubmitAndPass method. Future usage."},"submitSignatures()":{"notice":"SubmitSignatures method. Used in multiple protocols (i.e. as FTSO submit signature method)."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/ISubmission.sol":"ISubmission"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IRandomProvider.sol":{"keccak256":"0x1dc9b6fbeb006270a1cc1a7503f50bcb81e113f3d8d441b820bdac02a9f4c8bf","urls":["bzz-raw://ee727c336a95380ebac15e0c437faf5582a7bb6514a264b1e4ad353793dd438b","dweb:/ipfs/QmRqPc7Srq1Cog72Lip1AtFKFCRBpMsLq3ck33hFa4tQ4G"],"license":"MIT"},"lib/flare-periphery-contracts/coston2/ISubmission.sol":{"keccak256":"0x86781d53b5fbecedad353ccfad5c6fe9485626e2454dd888f8973a1bd7dc66a4","urls":["bzz-raw://484478ce4d014b731e4d4752602a421a456982dbe71a4e3e1a38215893213e7c","dweb:/ipfs/QmXAEP12jaCF2eSvfCU99iJgCjJruxcSaLCDgAg5sU84Wq"],"license":"MIT"}},"version":1},"id":42}