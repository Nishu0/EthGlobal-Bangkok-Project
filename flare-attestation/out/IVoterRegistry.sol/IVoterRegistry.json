{"abi":[{"type":"function","name":"chilledUntilRewardEpochId","inputs":[{"name":"_beneficiary","type":"bytes20","internalType":"bytes20"}],"outputs":[{"name":"_rewardEpochId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getNumberOfRegisteredVoters","inputs":[{"name":"_rewardEpochId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRegisteredVoters","inputs":[{"name":"_rewardEpochId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"isVoterRegistered","inputs":[{"name":"_voter","type":"address","internalType":"address"},{"name":"_rewardEpochId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxVoters","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"newSigningPolicyInitializationStartBlockNumber","inputs":[{"name":"_rewardEpochId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"publicKeyRequired","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"registerVoter","inputs":[{"name":"_voter","type":"address","internalType":"address"},{"name":"_signature","type":"tuple","internalType":"struct IVoterRegistry.Signature","components":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BeneficiaryChilled","inputs":[{"name":"beneficiary","type":"bytes20","indexed":true,"internalType":"bytes20"},{"name":"untilRewardEpochId","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VoterRegistered","inputs":[{"name":"voter","type":"address","indexed":true,"internalType":"address"},{"name":"rewardEpochId","type":"uint24","indexed":true,"internalType":"uint24"},{"name":"signingPolicyAddress","type":"address","indexed":true,"internalType":"address"},{"name":"submitAddress","type":"address","indexed":false,"internalType":"address"},{"name":"submitSignaturesAddress","type":"address","indexed":false,"internalType":"address"},{"name":"publicKeyPart1","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"publicKeyPart2","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"registrationWeight","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VoterRemoved","inputs":[{"name":"voter","type":"address","indexed":true,"internalType":"address"},{"name":"rewardEpochId","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"chilledUntilRewardEpochId(bytes20)":"3c5cb76f","getNumberOfRegisteredVoters(uint256)":"369e9434","getRegisteredVoters(uint256)":"457c2e47","isVoterRegistered(address,uint256)":"4f5a9968","maxVoters()":"d5e50a63","newSigningPolicyInitializationStartBlockNumber(uint256)":"fff50753","publicKeyRequired()":"92e3e45f","registerVoter(address,(uint8,bytes32,bytes32))":"8f7d0957"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes20\",\"name\":\"beneficiary\",\"type\":\"bytes20\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"untilRewardEpochId\",\"type\":\"uint256\"}],\"name\":\"BeneficiaryChilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"rewardEpochId\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signingPolicyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"submitAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"submitSignaturesAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"publicKeyPart1\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"publicKeyPart2\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationWeight\",\"type\":\"uint256\"}],\"name\":\"VoterRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"VoterRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes20\",\"name\":\"_beneficiary\",\"type\":\"bytes20\"}],\"name\":\"chilledUntilRewardEpochId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpochId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"getNumberOfRegisteredVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"getRegisteredVoters\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"isVoterRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVoters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardEpochId\",\"type\":\"uint256\"}],\"name\":\"newSigningPolicyInitializationStartBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"publicKeyRequired\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct IVoterRegistry.Signature\",\"name\":\"_signature\",\"type\":\"tuple\"}],\"name\":\"registerVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"chilledUntilRewardEpochId(bytes20)\":{\"params\":{\"_beneficiary\":\"The beneficiary (c-chain address or node id).\"},\"returns\":{\"_rewardEpochId\":\"The reward epoch id until which the voter is chilled.\"}},\"getNumberOfRegisteredVoters(uint256)\":{\"params\":{\"_rewardEpochId\":\"The reward epoch id.\"}},\"getRegisteredVoters(uint256)\":{\"params\":{\"_rewardEpochId\":\"The reward epoch id.\"}},\"isVoterRegistered(address,uint256)\":{\"params\":{\"_rewardEpochId\":\"The reward epoch id.\",\"_voter\":\"The voter address.\"}},\"newSigningPolicyInitializationStartBlockNumber(uint256)\":{\"params\":{\"_rewardEpochId\":\"The reward epoch id.\"}},\"registerVoter(address,(uint8,bytes32,bytes32))\":{\"params\":{\"_signature\":\"The signature.\",\"_voter\":\"The voter address.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BeneficiaryChilled(bytes20,uint256)\":{\"notice\":\"Event emitted when a beneficiary (c-chain address or node id) is chilled.\"},\"VoterRegistered(address,uint24,address,address,address,bytes32,bytes32,uint256)\":{\"notice\":\"Event emitted when a voter is registered.\"},\"VoterRemoved(address,uint256)\":{\"notice\":\"Event emitted when a voter is removed.\"}},\"kind\":\"user\",\"methods\":{\"chilledUntilRewardEpochId(bytes20)\":{\"notice\":\"In case of providing bad votes (e.g. ftso collusion), the beneficiary can be chilled for a few reward epochs. If beneficiary is chilled, the vote power assigned to it is zero.\"},\"getNumberOfRegisteredVoters(uint256)\":{\"notice\":\"Returns the number of registered voters for a given reward epoch. Size can be zero if the reward epoch is not supported (before initial reward epoch or future reward epoch). Size for the next reward epoch can still change until the signing policy snapshot is created.\"},\"getRegisteredVoters(uint256)\":{\"notice\":\"Returns the list of registered voters for a given reward epoch. List can be empty if the reward epoch is not supported (before initial reward epoch or future reward epoch). List for the next reward epoch can still change until the signing policy snapshot is created.\"},\"isVoterRegistered(address,uint256)\":{\"notice\":\"Returns true if a voter was (is currently) registered in a given reward epoch.\"},\"maxVoters()\":{\"notice\":\"Maximum number of voters in one reward epoch.\"},\"newSigningPolicyInitializationStartBlockNumber(uint256)\":{\"notice\":\"Returns the block number of the start of the new signing policy initialisation for a given reward epoch. It is a snaphost block of the voters' addresses (it is zero if the reward epoch is not supported).\"},\"publicKeyRequired()\":{\"notice\":\"Indicates if the voter must have the public key set when registering.\"},\"registerVoter(address,(uint8,bytes32,bytes32))\":{\"notice\":\"Registers a voter if the weight is high enough.\"}},\"notice\":\"VoterRegistry interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IVoterRegistry.sol\":\"IVoterRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IVoterRegistry.sol\":{\"keccak256\":\"0x61c3c9ac322108413d7c9b69f7e25077049090b8567b5b1397ce2392897f8198\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7c6945a162c152cd450cb26403eaebcaa0b86be0acd6d4768451603d033539\",\"dweb:/ipfs/QmdCKZXktqj3vHWSgCp8jDzwDXGXckk25ny5Qe2KfTrL7F\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes20","name":"beneficiary","type":"bytes20","indexed":true},{"internalType":"uint256","name":"untilRewardEpochId","type":"uint256","indexed":false}],"type":"event","name":"BeneficiaryChilled","anonymous":false},{"inputs":[{"internalType":"address","name":"voter","type":"address","indexed":true},{"internalType":"uint24","name":"rewardEpochId","type":"uint24","indexed":true},{"internalType":"address","name":"signingPolicyAddress","type":"address","indexed":true},{"internalType":"address","name":"submitAddress","type":"address","indexed":false},{"internalType":"address","name":"submitSignaturesAddress","type":"address","indexed":false},{"internalType":"bytes32","name":"publicKeyPart1","type":"bytes32","indexed":false},{"internalType":"bytes32","name":"publicKeyPart2","type":"bytes32","indexed":false},{"internalType":"uint256","name":"registrationWeight","type":"uint256","indexed":false}],"type":"event","name":"VoterRegistered","anonymous":false},{"inputs":[{"internalType":"address","name":"voter","type":"address","indexed":true},{"internalType":"uint256","name":"rewardEpochId","type":"uint256","indexed":true}],"type":"event","name":"VoterRemoved","anonymous":false},{"inputs":[{"internalType":"bytes20","name":"_beneficiary","type":"bytes20"}],"stateMutability":"view","type":"function","name":"chilledUntilRewardEpochId","outputs":[{"internalType":"uint256","name":"_rewardEpochId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpochId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getNumberOfRegisteredVoters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpochId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRegisteredVoters","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"_voter","type":"address"},{"internalType":"uint256","name":"_rewardEpochId","type":"uint256"}],"stateMutability":"view","type":"function","name":"isVoterRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxVoters","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_rewardEpochId","type":"uint256"}],"stateMutability":"view","type":"function","name":"newSigningPolicyInitializationStartBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"publicKeyRequired","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_voter","type":"address"},{"internalType":"struct IVoterRegistry.Signature","name":"_signature","type":"tuple","components":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]}],"stateMutability":"nonpayable","type":"function","name":"registerVoter"}],"devdoc":{"kind":"dev","methods":{"chilledUntilRewardEpochId(bytes20)":{"params":{"_beneficiary":"The beneficiary (c-chain address or node id)."},"returns":{"_rewardEpochId":"The reward epoch id until which the voter is chilled."}},"getNumberOfRegisteredVoters(uint256)":{"params":{"_rewardEpochId":"The reward epoch id."}},"getRegisteredVoters(uint256)":{"params":{"_rewardEpochId":"The reward epoch id."}},"isVoterRegistered(address,uint256)":{"params":{"_rewardEpochId":"The reward epoch id.","_voter":"The voter address."}},"newSigningPolicyInitializationStartBlockNumber(uint256)":{"params":{"_rewardEpochId":"The reward epoch id."}},"registerVoter(address,(uint8,bytes32,bytes32))":{"params":{"_signature":"The signature.","_voter":"The voter address."}}},"version":1},"userdoc":{"kind":"user","methods":{"chilledUntilRewardEpochId(bytes20)":{"notice":"In case of providing bad votes (e.g. ftso collusion), the beneficiary can be chilled for a few reward epochs. If beneficiary is chilled, the vote power assigned to it is zero."},"getNumberOfRegisteredVoters(uint256)":{"notice":"Returns the number of registered voters for a given reward epoch. Size can be zero if the reward epoch is not supported (before initial reward epoch or future reward epoch). Size for the next reward epoch can still change until the signing policy snapshot is created."},"getRegisteredVoters(uint256)":{"notice":"Returns the list of registered voters for a given reward epoch. List can be empty if the reward epoch is not supported (before initial reward epoch or future reward epoch). List for the next reward epoch can still change until the signing policy snapshot is created."},"isVoterRegistered(address,uint256)":{"notice":"Returns true if a voter was (is currently) registered in a given reward epoch."},"maxVoters()":{"notice":"Maximum number of voters in one reward epoch."},"newSigningPolicyInitializationStartBlockNumber(uint256)":{"notice":"Returns the block number of the start of the new signing policy initialisation for a given reward epoch. It is a snaphost block of the voters' addresses (it is zero if the reward epoch is not supported)."},"publicKeyRequired()":{"notice":"Indicates if the voter must have the public key set when registering."},"registerVoter(address,(uint8,bytes32,bytes32))":{"notice":"Registers a voter if the weight is high enough."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IVoterRegistry.sol":"IVoterRegistry"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IVoterRegistry.sol":{"keccak256":"0x61c3c9ac322108413d7c9b69f7e25077049090b8567b5b1397ce2392897f8198","urls":["bzz-raw://ec7c6945a162c152cd450cb26403eaebcaa0b86be0acd6d4768451603d033539","dweb:/ipfs/QmdCKZXktqj3vHWSgCp8jDzwDXGXckk25ny5Qe2KfTrL7F"],"license":"MIT"}},"version":1},"id":46}