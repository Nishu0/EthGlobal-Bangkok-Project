{"abi":[{"type":"function","name":"chilledUntilRewardEpoch","inputs":[{"name":"_voter","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"defaultMaxVotersForFtso","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getFtsoWhitelistedPriceProviders","inputs":[{"name":"_ftsoIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"getFtsoWhitelistedPriceProvidersBySymbol","inputs":[{"name":"_symbol","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"maxVotersForFtso","inputs":[{"name":"_ftsoIndex","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"requestFullVoterWhitelisting","inputs":[{"name":"_voter","type":"address","internalType":"address"}],"outputs":[{"name":"_supportedIndices","type":"uint256[]","internalType":"uint256[]"},{"name":"_success","type":"bool[]","internalType":"bool[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"requestWhitelistingVoter","inputs":[{"name":"_voter","type":"address","internalType":"address"},{"name":"_ftsoIndex","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"VoterChilled","inputs":[{"name":"voter","type":"address","indexed":false,"internalType":"address"},{"name":"untilRewardEpoch","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VoterRemovedFromWhitelist","inputs":[{"name":"voter","type":"address","indexed":false,"internalType":"address"},{"name":"ftsoIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"VoterWhitelisted","inputs":[{"name":"voter","type":"address","indexed":false,"internalType":"address"},{"name":"ftsoIndex","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"chilledUntilRewardEpoch(address)":"46538074","defaultMaxVotersForFtso()":"47ed51b1","getFtsoWhitelistedPriceProviders(uint256)":"09fcb400","getFtsoWhitelistedPriceProvidersBySymbol(string)":"aa89dfd4","maxVotersForFtso(uint256)":"98dccfc2","requestFullVoterWhitelisting(address)":"b06cbaf7","requestWhitelistingVoter(address,uint256)":"3de2cb1c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"untilRewardEpoch\",\"type\":\"uint256\"}],\"name\":\"VoterChilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"VoterRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"VoterWhitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"chilledUntilRewardEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultMaxVotersForFtso\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"getFtsoWhitelistedPriceProviders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"name\":\"getFtsoWhitelistedPriceProvidersBySymbol\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"maxVotersForFtso\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"requestFullVoterWhitelisting\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_supportedIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"_success\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_ftsoIndex\",\"type\":\"uint256\"}],\"name\":\"requestWhitelistingVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"VoterChilled(address,uint256)\":{\"notice\":\"Raised when an account is chilled from the voter whitelist.\"},\"VoterRemovedFromWhitelist(address,uint256)\":{\"notice\":\"Raised when an account is removed from the voter whitelist.\"},\"VoterWhitelisted(address,uint256)\":{\"notice\":\"Raised when an account is removed from the voter whitelist.\"}},\"kind\":\"user\",\"methods\":{\"chilledUntilRewardEpoch(address)\":{\"notice\":\"In case of providing bad prices (e.g. collusion), the voter can be chilled for a few reward epochs. A voter can whitelist again from a returned reward epoch onwards.\"},\"defaultMaxVotersForFtso()\":{\"notice\":\"Maximum number of voters in the whitelist for a new FTSO.\"},\"getFtsoWhitelistedPriceProviders(uint256)\":{\"notice\":\"Get whitelisted price providers for ftso at `_ftsoIndex`\"},\"getFtsoWhitelistedPriceProvidersBySymbol(string)\":{\"notice\":\"Get whitelisted price providers for ftso with `_symbol`\"},\"maxVotersForFtso(uint256)\":{\"notice\":\"Maximum number of voters in the whitelist for FTSO at index `_ftsoIndex`.\"},\"requestFullVoterWhitelisting(address)\":{\"notice\":\"Request to whitelist `_voter` account to all active ftsos. May be called by any address. It returns an array of supported ftso indices and success flag per index.\"},\"requestWhitelistingVoter(address,uint256)\":{\"notice\":\"Request to whitelist `_voter` account to ftso at `_ftsoIndex`. Will revert if vote power too low. May be called by any address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/IVoterWhitelister.sol\":\"IVoterWhitelister\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/IVoterWhitelister.sol\":{\"keccak256\":\"0xfaa76e4db7440304e5c1518e24b8c5008cbda90e30d31646f48346be20057669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26d0852e4b56b35d3448e2d3f636743ac8a296e4a5143a21e28fa18f633078d4\",\"dweb:/ipfs/QmeGuP6RUQq6n6vxF6KkFk8fDrAEfCVqwZiU8AsgDGAuBG\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"voter","type":"address","indexed":false},{"internalType":"uint256","name":"untilRewardEpoch","type":"uint256","indexed":false}],"type":"event","name":"VoterChilled","anonymous":false},{"inputs":[{"internalType":"address","name":"voter","type":"address","indexed":false},{"internalType":"uint256","name":"ftsoIndex","type":"uint256","indexed":false}],"type":"event","name":"VoterRemovedFromWhitelist","anonymous":false},{"inputs":[{"internalType":"address","name":"voter","type":"address","indexed":false},{"internalType":"uint256","name":"ftsoIndex","type":"uint256","indexed":false}],"type":"event","name":"VoterWhitelisted","anonymous":false},{"inputs":[{"internalType":"address","name":"_voter","type":"address"}],"stateMutability":"view","type":"function","name":"chilledUntilRewardEpoch","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"defaultMaxVotersForFtso","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_ftsoIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"getFtsoWhitelistedPriceProviders","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"_symbol","type":"string"}],"stateMutability":"view","type":"function","name":"getFtsoWhitelistedPriceProvidersBySymbol","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"uint256","name":"_ftsoIndex","type":"uint256"}],"stateMutability":"view","type":"function","name":"maxVotersForFtso","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"_voter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"requestFullVoterWhitelisting","outputs":[{"internalType":"uint256[]","name":"_supportedIndices","type":"uint256[]"},{"internalType":"bool[]","name":"_success","type":"bool[]"}]},{"inputs":[{"internalType":"address","name":"_voter","type":"address"},{"internalType":"uint256","name":"_ftsoIndex","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"requestWhitelistingVoter"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"chilledUntilRewardEpoch(address)":{"notice":"In case of providing bad prices (e.g. collusion), the voter can be chilled for a few reward epochs. A voter can whitelist again from a returned reward epoch onwards."},"defaultMaxVotersForFtso()":{"notice":"Maximum number of voters in the whitelist for a new FTSO."},"getFtsoWhitelistedPriceProviders(uint256)":{"notice":"Get whitelisted price providers for ftso at `_ftsoIndex`"},"getFtsoWhitelistedPriceProvidersBySymbol(string)":{"notice":"Get whitelisted price providers for ftso with `_symbol`"},"maxVotersForFtso(uint256)":{"notice":"Maximum number of voters in the whitelist for FTSO at index `_ftsoIndex`."},"requestFullVoterWhitelisting(address)":{"notice":"Request to whitelist `_voter` account to all active ftsos. May be called by any address. It returns an array of supported ftso indices and success flag per index."},"requestWhitelistingVoter(address,uint256)":{"notice":"Request to whitelist `_voter` account to ftso at `_ftsoIndex`. Will revert if vote power too low. May be called by any address."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/IVoterWhitelister.sol":"IVoterWhitelister"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/IVoterWhitelister.sol":{"keccak256":"0xfaa76e4db7440304e5c1518e24b8c5008cbda90e30d31646f48346be20057669","urls":["bzz-raw://26d0852e4b56b35d3448e2d3f636743ac8a296e4a5143a21e28fa18f633078d4","dweb:/ipfs/QmeGuP6RUQq6n6vxF6KkFk8fDrAEfCVqwZiU8AsgDGAuBG"],"license":"MIT"}},"version":1},"id":47}