{"abi":[{"type":"function","name":"getRandomNumber","inputs":[],"outputs":[{"name":"_randomNumber","type":"uint256","internalType":"uint256"},{"name":"_isSecureRandom","type":"bool","internalType":"bool"},{"name":"_randomTimestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getRandomNumberHistorical","inputs":[{"name":"_votingRoundId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"_randomNumber","type":"uint256","internalType":"uint256"},{"name":"_isSecureRandom","type":"bool","internalType":"bool"},{"name":"_randomTimestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getRandomNumber()":"dbdff2c1","getRandomNumberHistorical(uint256)":"a87f1438"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSecureRandom\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_randomTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_votingRoundId\",\"type\":\"uint256\"}],\"name\":\"getRandomNumberHistorical\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomNumber\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isSecureRandom\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_randomTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRandomNumber()\":{\"returns\":{\"_isSecureRandom\":\"The flag indicating if the random number is secure.\",\"_randomNumber\":\"The current random number.\",\"_randomTimestamp\":\"The timestamp of the random number.\"}},\"getRandomNumberHistorical(uint256)\":{\"params\":{\"_votingRoundId\":\"The voting round id.\"},\"returns\":{\"_isSecureRandom\":\"The flag indicating if the random number is secure.\",\"_randomNumber\":\"The current random number.\",\"_randomTimestamp\":\"The timestamp of the random number.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getRandomNumber()\":{\"notice\":\"Returns the current random number, its timestamp and the flag indicating if it is secure.\"},\"getRandomNumberHistorical(uint256)\":{\"notice\":\"Returns the historical random number for a given _votingRoundId, its timestamp and the flag indicating if it is secure. If no finalization in the _votingRoundId, the function reverts.\"}},\"notice\":\"Random number V2 long term support interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/flare-periphery-contracts/coston2/RandomNumberV2Interface.sol\":\"RandomNumberV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":flare-periphery-contracts/=lib/flare-periphery-contracts/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/flare-periphery-contracts/coston2/RandomNumberV2Interface.sol\":{\"keccak256\":\"0xc35805236772520b075fb386d7967eaf6dd45e5d5bac6a514e932f90ad32924e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18d2ed8d2b2d10b27fcbf61e9823dfeb8158d05fe333d917a86c11f8b6b51f7b\",\"dweb:/ipfs/QmWPbSRZDNNiuGA7u5iKFTyH3jbJaPy9XZGKHvWQ6vkV93\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"getRandomNumber","outputs":[{"internalType":"uint256","name":"_randomNumber","type":"uint256"},{"internalType":"bool","name":"_isSecureRandom","type":"bool"},{"internalType":"uint256","name":"_randomTimestamp","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"_votingRoundId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getRandomNumberHistorical","outputs":[{"internalType":"uint256","name":"_randomNumber","type":"uint256"},{"internalType":"bool","name":"_isSecureRandom","type":"bool"},{"internalType":"uint256","name":"_randomTimestamp","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getRandomNumber()":{"returns":{"_isSecureRandom":"The flag indicating if the random number is secure.","_randomNumber":"The current random number.","_randomTimestamp":"The timestamp of the random number."}},"getRandomNumberHistorical(uint256)":{"params":{"_votingRoundId":"The voting round id."},"returns":{"_isSecureRandom":"The flag indicating if the random number is secure.","_randomNumber":"The current random number.","_randomTimestamp":"The timestamp of the random number."}}},"version":1},"userdoc":{"kind":"user","methods":{"getRandomNumber()":{"notice":"Returns the current random number, its timestamp and the flag indicating if it is secure."},"getRandomNumberHistorical(uint256)":{"notice":"Returns the historical random number for a given _votingRoundId, its timestamp and the flag indicating if it is secure. If no finalization in the _votingRoundId, the function reverts."}},"version":1}},"settings":{"remappings":["@flarenetwork/flare-periphery-contracts/=lib/flare-periphery-contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","flare-periphery-contracts/=lib/flare-periphery-contracts/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin/=lib/openzeppelin-contracts/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/flare-periphery-contracts/coston2/RandomNumberV2Interface.sol":"RandomNumberV2Interface"},"evmVersion":"paris","libraries":{}},"sources":{"lib/flare-periphery-contracts/coston2/RandomNumberV2Interface.sol":{"keccak256":"0xc35805236772520b075fb386d7967eaf6dd45e5d5bac6a514e932f90ad32924e","urls":["bzz-raw://18d2ed8d2b2d10b27fcbf61e9823dfeb8158d05fe333d917a86c11f8b6b51f7b","dweb:/ipfs/QmWPbSRZDNNiuGA7u5iKFTyH3jbJaPy9XZGKHvWQ6vkV93"],"license":"MIT"}},"version":1},"id":51}